{"ast":null,"code":"import { getMovieByID } from \"../DALs/MoviesDAL\";\nimport { getAllSubscriptions } from \"../DALs/Subscriptions_DAL\"; //Search movies that includes an input word:\n\nconst searchMovies = (allMovies, searchInput) => {\n  const arrMovies = []; //array of movies after Search\n\n  for (let movie of allMovies) {\n    if (movie.name.toUpperCase().includes(searchInput.toUpperCase())) {\n      arrMovies.push(movie);\n    }\n  }\n\n  return arrMovie;\n}; //Delete movie from subscription that watched it  and from DB movies\n\n\nconst deleteMovieFromAll = {}; //Checking if someone has watched a movie:\n\nconst checkIfMovieWatched = async movieId => {\n  let boolean = false; // movie dont watched\n\n  const movieById = await getMovieByID(movieId); //specific movie by id\n\n  const subscriptions = await getAllSubscriptions(); //subscriptions of this movie\n\n  for (let subscription of subscriptions) {\n    for (let movie of subscription.movies) {\n      if (movie.movieId === movieById._id) {\n        boolean = true;\n      }\n    }\n  }\n\n  return boolean;\n};\n\nexport { searchMovies };","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Utils/Movies_Utils.js"],"names":["getMovieByID","getAllSubscriptions","searchMovies","allMovies","searchInput","arrMovies","movie","name","toUpperCase","includes","push","arrMovie","deleteMovieFromAll","checkIfMovieWatched","movieId","boolean","movieById","subscriptions","subscription","movies","_id"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,mBAAT,QAAoC,2BAApC,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA4B;AAC7C,QAAMC,SAAS,GAAG,EAAlB,CAD6C,CACzB;;AACpB,OAAK,IAAIC,KAAT,IAAkBH,SAAlB,EAA6B;AACzB,QAAIG,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCL,WAAW,CAACI,WAAZ,EAAlC,CAAJ,EACA;AACIH,MAAAA,SAAS,CAACK,IAAV,CAAeJ,KAAf;AACH;AACJ;;AACD,SAAOK,QAAP;AACH,CATD,C,CAUA;;;AACA,MAAMC,kBAAkB,GACxB,EADA,C,CAKA;;AACA,MAAMC,mBAAmB,GAAG,MAAOC,OAAP,IAC5B;AACI,MAAIC,OAAO,GAAG,KAAd,CADJ,CACwB;;AACpB,QAAMC,SAAS,GAAG,MAAMhB,YAAY,CAACc,OAAD,CAApC,CAFJ,CAEiD;;AAC7C,QAAMG,aAAa,GAAG,MAAMhB,mBAAmB,EAA/C,CAHJ,CAGqD;;AACjD,OAAK,IAAIiB,YAAT,IAAyBD,aAAzB,EAAuC;AACnC,SAAK,IAAIX,KAAT,IAAkBY,YAAY,CAACC,MAA/B,EAAuC;AACnC,UAAGb,KAAK,CAACQ,OAAN,KAAgBE,SAAS,CAACI,GAA7B,EAAiC;AAC7BL,QAAAA,OAAO,GAAG,IAAV;AACH;AACJ;AACJ;;AACD,SAAOA,OAAP;AACH,CAbD;;AAeA,SAASb,YAAT","sourcesContent":["import { getMovieByID } from \"../DALs/MoviesDAL\"\nimport { getAllSubscriptions } from \"../DALs/Subscriptions_DAL\"\n\n//Search movies that includes an input word:\nconst searchMovies = (allMovies, searchInput) => {\n    const arrMovies = []//array of movies after Search\n    for (let movie of allMovies) {\n        if (movie.name.toUpperCase().includes(searchInput.toUpperCase()))\n        {\n            arrMovies.push(movie)\n        }\n    }\n    return arrMovie\n}\n//Delete movie from subscription that watched it  and from DB movies\nconst deleteMovieFromAll = \n{\n\n}\n\n//Checking if someone has watched a movie:\nconst checkIfMovieWatched = async (movieId)=>\n{\n    let boolean = false // movie dont watched\n    const movieById = await getMovieByID(movieId)//specific movie by id\n    const subscriptions = await getAllSubscriptions()//subscriptions of this movie\n    for (let subscription of subscriptions){\n        for (let movie of subscription.movies ){\n            if(movie.movieId===movieById._id){\n                boolean = true\n            }\n        }\n    }\n    return boolean\n}\n\nexport  {searchMovies}"]},"metadata":{},"sourceType":"module"}