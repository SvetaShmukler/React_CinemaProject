{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js\";\nimport { Component } from \"react\";\nimport { getUserByID } from \"../DAL_USERS\";\nimport { getUserTasks } from \"../DAL_TODOS\";\nimport Tasks from \"./Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showTasks = async () => {\n      if (!this.state.isShowingTask) {\n        const tasks = await getUserTasks(this.props.id);\n        this.setState(prevState => ({\n          tasks,\n          isShowingTask: !prevState.isShowingTask\n        }));\n      } else {\n        this.setState(prevState => ({\n          tasks: [],\n          isShowingTask: !prevState.isShowingTask\n        }));\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      tasks: [],\n      isShowingTask: false\n    };\n  }\n\n  async componentDidMount() {\n    const user = await getUserByID(usersURL, this.props.id);\n    this.setState({\n      name: user.data.name,\n      email: user.data.email\n    });\n    olecons.log(this.state.tasks);\n  }\n\n  /*async componentDidUpdate (prevProps)\r\n  {\r\n      if(this.props.userID !== prevProps.userID)\r\n      {\r\n          const alltodos = await getUserTodosData(this.props.userID)\r\n              \r\n          this.setState({todos:alltodos})\r\n          \r\n      }\r\n  }*/\n  render() {\n    const tasksRep = this.state.tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          left: \"800px\",\n          marginTop: \"-150px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Tasks, {\n          todo: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 101\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }); //const colorborder;\n    //colorborder = this.state.isRed?'redtyle':'greenStyle'\n    //className ={colorborder}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        background: 'khaki',\n        borderRadius: '12px',\n        padding: '5px',\n        width: '300px',\n        height: '200px',\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"ID: \", this.props.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 65\n      }, this), \"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Other Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this), \"Show task:\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showTasks,\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 24\n      }, this), this.state.isShowingTask ? tasksRep : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js"],"names":["Component","getUserByID","getUserTasks","Tasks","usersURL","Users","constructor","props","showTasks","state","isShowingTask","tasks","id","setState","prevState","name","email","componentDidMount","user","data","olecons","log","render","tasksRep","map","task","index","position","left","marginTop","border","background","borderRadius","padding","width","height","textAlign"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { getUserByID} from \"../DAL_USERS\";\r\nimport { getUserTasks } from \"../DAL_TODOS\";\r\nimport Tasks from \"./Tasks\";\r\n\r\n\r\n\r\nconst usersURL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nexport default class Users extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {name:\"\",email:\"\",tasks:[],isShowingTask:false}\r\n    }\r\n\r\n \r\n\r\n    async componentDidMount()\r\n    {\r\n        const user = await getUserByID(usersURL, this.props.id)\r\n\r\n        this.setState({name:user.data.name, email:user.data.email})\r\n        olecons.log(this.state.tasks);\r\n     \r\n    }\r\n\r\n    showTasks = async()=>\r\n    {\r\n        if (!this.state.isShowingTask)\r\n        {\r\n            const tasks = await getUserTasks(this.props.id)\r\n            this.setState(prevState => ({tasks, isShowingTask:!prevState.isShowingTask}))\r\n        }\r\n        else\r\n        {\r\n            this.setState(prevState => ({tasks:[], isShowingTask:!prevState.isShowingTask}))\r\n        }\r\n    }\r\n\r\n        \r\n    /*async componentDidUpdate (prevProps)\r\n    {\r\n        if(this.props.userID !== prevProps.userID)\r\n        {\r\n            const alltodos = await getUserTodosData(this.props.userID)\r\n                \r\n            this.setState({todos:alltodos})\r\n            \r\n        }\r\n    }*/\r\n\r\n   \r\n\r\n\r\n    render()\r\n    {   const tasksRep = this.state.tasks.map((task,index) => {\r\n        return (<div  style = {{ position:\"absolute\", left:\"800px\",marginTop:\"-150px\"}} key={index}><Tasks todo={task}/></div>)})\r\n        //const colorborder;\r\n        //colorborder = this.state.isRed?'redtyle':'greenStyle'\r\n        //className ={colorborder}\r\n        \r\n        return (<div  style={{ border: '2px solid black',background:'khaki', borderRadius: '12px', padding: '5px', width: '300px', height: '200px', textAlign: 'left'}}>\r\n\r\n            <h4>ID: {this.props.id}</h4>\r\n            Name:<input type = \"text\" value ={this.state.name}/><br/>\r\n            Email:<input type = \"email\" value ={this.state.email}/><br/>\r\n           \r\n\r\n            \r\n            \r\n            \r\n            <button>Other Data</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Update</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Delete</button><br/>\r\n             Show task:< button onClick= {this.showTasks}>Task</button>\r\n            {this.state.isShowingTask?tasksRep:\"\"}\r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}