{"ast":null,"code":"import axios from 'axios'; //Basic functions for work with Users data:\n\nconst url = 'http://localhost:8002/users';\n\nconst getAllUsers = async () => (await axios.get(url)).data;\n\ngetAllUsers.then(console.log);\n\nconst getUserByID = async id => await (await axios.get(`${url}/${id}`)).data;\n\nconst updateUserById = async (updatedUser, id) => await axios.put(`${url}/${id}`, updatedUser);\n\nconst addUser = async newUser => await axios.post(url, newUser);\n\nconst deleteUser = async id => await axios.delete(`${url}/${id}`);\n\nexport { getAllUsers, getUserByID, updateUserById, addUser, deleteUser };","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/DALs/Users_DAL.js"],"names":["axios","url","getAllUsers","get","data","then","console","log","getUserByID","id","updateUserById","updatedUser","put","addUser","newUser","post","deleteUser","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,GAAG,GAAG,6BAAZ;;AAEA,MAAMC,WAAW,GAAG,YAAa,CAAC,MAAMF,KAAK,CAACG,GAAN,CAAUF,GAAV,CAAP,EAAuBG,IAAxD;;AAEAF,WAAW,CAACG,IAAZ,CAAiBC,OAAO,CAACC,GAAzB;;AAEA,MAAMC,WAAW,GAAG,MAAOC,EAAP,IAAe,MAAM,CAAC,MAAMT,KAAK,CAACG,GAAN,CAAW,GAAEF,GAAI,IAAGQ,EAAG,EAAvB,CAAP,EAAkCL,IAA3E;;AAEA,MAAMM,cAAc,GAAG,OAAOC,WAAP,EAAoBF,EAApB,KAA2B,MAAMT,KAAK,CAACY,GAAN,CAAW,GAAEX,GAAI,IAAGQ,EAAG,EAAvB,EAA0BE,WAA1B,CAAxD;;AAEA,MAAME,OAAO,GAAG,MAAOC,OAAP,IAAmB,MAAMd,KAAK,CAACe,IAAN,CAAWd,GAAX,EAAgBa,OAAhB,CAAzC;;AAEA,MAAME,UAAU,GAAG,MAAOP,EAAP,IAAc,MAAMT,KAAK,CAACiB,MAAN,CAAc,GAAEhB,GAAI,IAAGQ,EAAG,EAA1B,CAAvC;;AAEA,SAASP,WAAT,EAAsBM,WAAtB,EAAmCE,cAAnC,EAAmDG,OAAnD,EAA4DG,UAA5D","sourcesContent":["import axios from 'axios'\n\n//Basic functions for work with Users data:\n\nconst url = 'http://localhost:8002/users'\n\nconst getAllUsers = async () => ((await axios.get(url)).data)\n\ngetAllUsers.then(console.log)\n\nconst getUserByID = async (id) => (await (await axios.get(`${url}/${id}`)).data)\n\nconst updateUserById = async (updatedUser, id) => await axios.put(`${url}/${id}`, updatedUser)\n\nconst addUser = async (newUser) => await axios.post(url, newUser)\n\nconst deleteUser = async (id) => await axios.delete(`${url}/${id}`)\n\nexport { getAllUsers, getUserByID, updateUserById, addUser, deleteUser } "]},"metadata":{},"sourceType":"module"}