{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MemberNameComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { deleteMember } from '../DALs/Members_DAL';\nimport { deleteSubscriptionById } from '../Utils/Subscriptions_Utils';\nimport MoviesWatchedComp from './MoviesWatchedComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemberNameComp() {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const [Member, setMember] = useState({});\n  const [Name, setName] = useState();\n  const [Email, setEmail] = useState();\n  const [City, setCity] = useState();\n  const [refresh, setRefresh] = useState(true);\n  const permissions = useSelector(state => state.permissions);\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); //Loading the member to the page:\n\n  useEffect(async () => {\n    setMember(await findMemberByName(name));\n  }, []); //Loading the member's info to the page:\n\n  useEffect(async () => {\n    setName(Member.name);\n    setEmail(Member.email);\n    setCity(Member.city);\n  }, [Member]);\n\n  const edit = () => {}; //Delete a member:\n\n\n  const deleteMemberButton = async () => {\n    let bool = false;\n\n    for (let per of permissions) if (per === 'Delete Subscriptions') bool = true;\n\n    if (bool) {\n      await deleteMember(Member._id);\n      await deleteSubscriptionById(Member._id);\n      navigate('/mainPage/movies/allMovies'); //navigate back to allMovies page\n    } else alert(\"You Don't Have The Permission To Delete Subscription\");\n  }; //EditMember page if the user has the permission to do it:\n\n\n  const editMemberButton = () => {\n    let bool = false;\n\n    for (let per of permissions) if (per === 'Update Subscriptions') bool = true;\n\n    if (bool) {\n      dispatch({\n        type: 'Save member for edit it',\n        payload: Member._id\n      });\n      navigate('/mainPage/editMember'); //navigate to editMember page\n    } else alert(\"You Don't Have The Permission To Update Subscription\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memberDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Email: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), Email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"City: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), City, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"editDeleteBtns\",\n      onClick: editMemberButton,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"editDeleteBtns\",\n      onClick: deleteMemberButton,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 92\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 98\n    }, this), /*#__PURE__*/_jsxDEV(MoviesWatchedComp, {\n      refresh: refresh,\n      cb: () => setRefresh(false),\n      id: Member === null || Member === void 0 ? void 0 : Member._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MemberNameComp, \"GwMe9oSXzbPiw9Ky1ih6nI/m+5U=\", false, function () {\n  return [useParams, useSelector, useDispatch, useNavigate];\n});\n\n_c = MemberNameComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberNameComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MemberNameComponent.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","deleteMember","deleteSubscriptionById","MoviesWatchedComp","MemberNameComp","name","Member","setMember","Name","setName","Email","setEmail","City","setCity","refresh","setRefresh","permissions","state","dispatch","navigate","findMemberByName","email","city","edit","deleteMemberButton","bool","per","_id","alert","editMemberButton","type","payload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { deleteMember } from '../DALs/Members_DAL'\nimport { deleteSubscriptionById } from '../Utils/Subscriptions_Utils'\nimport MoviesWatchedComp from './MoviesWatchedComponent'\n\nexport default function MemberNameComp() {\n    const { name } = useParams()\n    const [Member, setMember] = useState({})\n    const [Name, setName] = useState()\n    const [Email, setEmail] = useState()\n    const [City, setCity] = useState()\n    const [refresh, setRefresh] = useState(true)\n\n    const permissions = useSelector(state => state.permissions)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    //Loading the member to the page:\n    useEffect(async () => {\n        setMember(await findMemberByName(name))\n    }, [])\n\n    //Loading the member's info to the page:\n    useEffect(async () => {\n        setName(Member.name)\n        setEmail(Member.email)\n        setCity(Member.city)\n    }, [Member])\n\n    const edit =()=>{}\n    \n    //Delete a member:\n    const deleteMemberButton = async () => {\n        let bool = false\n        for (let per of permissions)\n            if (per === 'Delete Subscriptions')\n                bool = true\n        if (bool) {\n            await deleteMember(Member._id)\n            await deleteSubscriptionById(Member._id)\n            navigate('/mainPage/movies/allMovies')//navigate back to allMovies page\n        } else\n            alert(\"You Don't Have The Permission To Delete Subscription\")\n    }\n\n     //EditMember page if the user has the permission to do it:\n     const editMemberButton = () => {\n        let bool = false\n        for (let per of permissions)\n            if (per === 'Update Subscriptions')\n                bool = true\n        if (bool) {\n            dispatch({ type: 'Save member for edit it', payload: Member._id })\n            navigate('/mainPage/editMember')//navigate to editMember page\n        } else\n            alert(\"You Don't Have The Permission To Update Subscription\")\n    }\n\n    return (\n        <div className='memberDiv'>\n            <h3>{Name}</h3>\n            <strong>Email: </strong>{Email}<br />\n            <strong>City: </strong>{City}<br /><br />\n            <button className='editDeleteBtns' onClick={editMemberButton}>Edit</button>\n            <button className='editDeleteBtns' onClick={deleteMemberButton}>Delete</button><br /><br />\n            <MoviesWatchedComp refresh={refresh} cb={() => setRefresh(false)} id={Member?._id} />\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}