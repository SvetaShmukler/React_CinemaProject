{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Main.js\";\nimport React, { Component } from 'react';\nimport { getAllUsers } from '../DALs/DAL_USERS';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = e => {\n      let searchedText = e.target.value;\n      console.log(\"Search text is: \" + searchedText);\n\n      if (searchedText.length === 0) {\n        this.setState({\n          filteredUsers: this.state.users\n        });\n        console.log(\"test\");\n      } else {\n        this.setState({\n          filteredUsers: this.state.users\n        });\n        console.log(\"Filtered users --->before filter:\");\n        console.log(this.state.filteredUsers);\n        this.setStatesearchedUsers = this.state.filteredUsers.filter(user => user.name.includes(searchedText) || user.email.includes(searchedText));\n        console.log(\"filter:\");\n        console.log(searchedUsers);\n        this.setState({\n          filteredUsers: searchedUsers\n        });\n        console.log(\"Filtered users --->after filter:\");\n        console.log(this.state.filteredUsers);\n      }\n\n      searchedText = \"\";\n    };\n\n    this.state = {\n      users: [],\n      filteredUsers: [],\n      searchedUsers: [],\n      names: [],\n      emails: [],\n      search: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const users = await getAllUsers(usersURL);\n    this.setState({\n      users: users.data\n    });\n    this.setState({\n      filteredUsers: users.data\n    });\n    this.setState({\n      names: users.data.name\n    });\n    this.setState({\n      emails: users.data.email\n    });\n  }\n\n  render() {\n    const repUsers = this.state.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Users, {\n        id: user.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 118\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 67\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        background: 'pink',\n        borderRadius: '12px',\n        padding: '5px',\n        width: '500px',\n        textAlign: 'center',\n        margin: 'auto'\n      },\n      children: [\"Search \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 42\n      }, this), repUsers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Main.js"],"names":["React","Component","getAllUsers","Users","usersURL","Main","constructor","handleInputChange","e","searchedText","target","value","console","log","length","setState","filteredUsers","state","users","setStatesearchedUsers","filter","user","name","includes","email","searchedUsers","names","emails","search","componentDidMount","data","render","repUsers","map","index","id","border","background","borderRadius","padding","width","textAlign","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { getAllUsers } from '../DALs/DAL_USERS';\r\nimport Users from './Users';\r\n\r\nconst usersURL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nclass Main extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {users:[], filteredUsers:[],searchedUsers:[], names:[],emails:[],search:\"\"}\r\n    }\r\n    async componentDidMount()\r\n    {\r\n        const users = await getAllUsers(usersURL)\r\n        this.setState({users:users.data})\r\n        this.setState({filteredUsers:users.data})\r\n        this.setState({names:users.data.name})\r\n        this.setState({emails:users.data.email})\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        let searchedText = e.target.value;\r\n        console.log(\"Search text is: \" +searchedText)\r\n            \r\n            if (searchedText.length===0)\r\n            {\r\n                 this.setState({filteredUsers:this.state.users})\r\n                 console.log(\"test\")\r\n            }\r\n            else\r\n            {\r\n                this.setState({filteredUsers:this.state.users})\r\n                \r\n                console.log(\"Filtered users --->before filter:\")\r\n                console.log(this.state.filteredUsers)\r\n                \r\n                this.setStatesearchedUsers=this.state.filteredUsers.filter((user)=>user.name.includes(searchedText)||user.email.includes(searchedText))\r\n                \r\n                console.log(\"filter:\")\r\n                console.log(searchedUsers)\r\n                \r\n                this.setState({filteredUsers:searchedUsers})\r\n               \r\n                \r\n                console.log(\"Filtered users --->after filter:\")\r\n                console.log(this.state.filteredUsers)\r\n\r\n            }\r\n            \r\n        searchedText = \"\"\r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n            const repUsers = this.state.users.map((user,index) => <div key={index}><Users key ={index} id={user.id}/><br/></div>)\r\n            return(\r\n                <div style={{ border: '2px solid black',background:'pink', borderRadius: '12px', padding: '5px', width: '500px', textAlign: 'center', margin:'auto'}}>\r\n\r\n                Search <input type=\"text\"  onChange={this.handleInputChange}/>&nbsp;&nbsp;\r\n                <button>Add</button><br/><br/>\r\n                {repUsers} \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}