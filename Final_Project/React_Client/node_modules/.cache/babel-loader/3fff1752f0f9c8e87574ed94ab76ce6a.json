{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MoviesWatchedComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovieByID } from '../DALs/MoviesDAL';\nimport { checkIfHasSubscription, getSubscriptionsByMemberId } from '../Utils/Subscriptions_Utils';\nimport MovieSubscribeComp from './MovieSubscribeComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoviesWatchedComp(props) {\n  _s();\n\n  //states:\n  const [movies, setMovies] = useState();\n  const [boolean, setBoolean] = useState(false);\n  const [showAddMovie, setshowAddMovie] = useState(false);\n  useEffect(async () => {\n    if (await checkIfHasSubscription(props.id)) //if member has subscriptions\n      {\n        const subscriptions = await getSubscriptionsByMemberId(props.id); //subscriptions of member\n\n        let arr = [];\n\n        for (let movie of subscriptions.movies) //for each movie of subscriptions DB\n        {\n          let obj = await getMovieByID();\n        }\n      }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Movies Watched:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Subscribe to new movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MovieSubscribeComp, {\n      id: props.id,\n      cb: refresh,\n      show: showAddMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 79\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n}\n\n_s(MoviesWatchedComp, \"BWQ+vMZUfBRE+jUBzuZ/cQofbDU=\");\n\n_c = MoviesWatchedComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesWatchedComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MoviesWatchedComponent.js"],"names":["React","useEffect","useState","Link","getMovieByID","checkIfHasSubscription","getSubscriptionsByMemberId","MovieSubscribeComp","MoviesWatchedComp","props","movies","setMovies","boolean","setBoolean","showAddMovie","setshowAddMovie","id","subscriptions","arr","movie","obj","refresh"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,sBAAT,EAAiCC,0BAAjC,QAAmE,8BAAnE;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;;AAIA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC7C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,YAAS;AACf,QAAG,MAAMI,sBAAsB,CAACI,KAAK,CAACO,EAAP,CAA/B,EAA0C;AAC1C;AACI,cAAMC,aAAa,GAAG,MAAMX,0BAA0B,CAACG,KAAK,CAACO,EAAP,CAAtD,CADJ,CACoE;;AAChE,YAAIE,GAAG,GAAG,EAAV;;AACA,aAAI,IAAIC,KAAR,IAAiBF,aAAa,CAACP,MAA/B,EAAsC;AACtC;AACI,cAAIU,GAAG,GAAG,MAAMhB,YAAY,EAA5B;AACH;AACJ;AAEJ,GAXQ,CAAT;AAaA,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH,QAAC,kBAAD;AAAoB,MAAA,EAAE,EAAEK,KAAK,CAACO,EAA9B;AAAkC,MAAA,EAAE,EAAEK,OAAtC;AAA+C,MAAA,IAAI,EAAIP;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHG,eAGmE;AAAA;AAAA;AAAA;AAAA,YAHnE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH;;GAzBuBN,iB;;KAAAA,iB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getMovieByID } from '../DALs/MoviesDAL'\nimport { checkIfHasSubscription, getSubscriptionsByMemberId } from '../Utils/Subscriptions_Utils'\nimport MovieSubscribeComp from './MovieSubscribeComponent'\n\n\n\nexport default function MoviesWatchedComp(props) {\n    //states:\n    const [movies, setMovies] = useState()\n    const [boolean, setBoolean] = useState(false)\n    const [showAddMovie, setshowAddMovie] = useState(false)\n\n    useEffect(async()=>{\n        if(await checkIfHasSubscription(props.id))//if member has subscriptions\n        {\n            const subscriptions = await getSubscriptionsByMemberId(props.id)//subscriptions of member\n            let arr = []\n            for(let movie of subscriptions.movies)//for each movie of subscriptions DB\n            {\n                let obj = await getMovieByID()\n            }\n        }\n\n    })\n\n    return(<div>\n        <h4>Movies Watched:</h4>\n        <button>Subscribe to new movie</button>\n        <MovieSubscribeComp id={props.id} cb={refresh} show = {showAddMovie}/><br/>\n\n    </div>)\n}"]},"metadata":{},"sourceType":"module"}