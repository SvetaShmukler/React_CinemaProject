{"ast":null,"code":"import { getMovieByID } from \"../DALs/MoviesDAL\"; //Search movies that icludes an input word:\n\nconst searchMovies = (allMovies, searchInput) => {\n  const arrMovies = []; //array of movies after Search\n\n  for (let movie of allMovies) {\n    if (movie.name.toUpperCase().includes(searchInput.toUpperCase())) {\n      arrMovies.push(movie);\n    }\n  }\n\n  return arrMovies;\n  console.log(arrMovies);\n}; //Delete movie from subscription that watched it  and from DB movies\n\n\nconst deleteMovieFromAll = {}; //\n\nconst checkIfMovieWatched = async movieId => {\n  let boolean = false; // movie dont watched\n\n  const movie = await getMovieByID();\n};\n\nexport { searchMovies };","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Utils/Movies_Utils.js"],"names":["getMovieByID","searchMovies","allMovies","searchInput","arrMovies","movie","name","toUpperCase","includes","push","console","log","deleteMovieFromAll","checkIfMovieWatched","movieId","boolean"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA4B;AAC7C,QAAMC,SAAS,GAAG,EAAlB,CAD6C,CACzB;;AACpB,OAAK,IAAIC,KAAT,IAAkBH,SAAlB,EAA6B;AACzB,QAAIG,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCL,WAAW,CAACI,WAAZ,EAAlC,CAAJ,EACA;AACIH,MAAAA,SAAS,CAACK,IAAV,CAAeJ,KAAf;AACH;AACJ;;AACD,SAAOD,SAAP;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACH,CAVD,C,CAWA;;;AACA,MAAMQ,kBAAkB,GACxB,EADA,C,CAKA;;AACA,MAAMC,mBAAmB,GAAG,MAAOC,OAAP,IAC5B;AACI,MAAIC,OAAO,GAAG,KAAd,CADJ,CACwB;;AACpB,QAAMV,KAAK,GAAG,MAAML,YAAY,EAAhC;AACH,CAJD;;AAMA,SAASC,YAAT","sourcesContent":["import { getMovieByID } from \"../DALs/MoviesDAL\"\n\n//Search movies that icludes an input word:\nconst searchMovies = (allMovies, searchInput) => {\n    const arrMovies = []//array of movies after Search\n    for (let movie of allMovies) {\n        if (movie.name.toUpperCase().includes(searchInput.toUpperCase()))\n        {\n            arrMovies.push(movie)\n        }\n    }\n    return arrMovies\n    console.log(arrMovies)\n}\n//Delete movie from subscription that watched it  and from DB movies\nconst deleteMovieFromAll = \n{\n\n}\n\n//\nconst checkIfMovieWatched = async (movieId)=>\n{\n    let boolean = false // movie dont watched\n    const movie = await getMovieByID()\n}\n\nexport  {searchMovies}"]},"metadata":{},"sourceType":"module"}