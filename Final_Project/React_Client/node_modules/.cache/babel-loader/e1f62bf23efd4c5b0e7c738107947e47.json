{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js\";\nimport { Component } from \"react\";\nimport { getUserByID } from \"../DAL_USERS\";\nimport { getUserTasks, uncompletedTask } from \"../DAL_TODOS\";\nimport Tasks from \"./Tasks\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.redColorDiv = async () => {\n      const taskStatus = await uncompletedTask(this.props.id);\n\n      if (taskStatus == false) {\n        this.setState(prevState => ({\n          isRed: !prevState.isRed\n        }));\n      }\n    };\n\n    this.showTasks = async () => {\n      if (!this.state.isShowingTask) {\n        const tasks = await getUserTasks(this.props.id);\n        this.setState(prevState => ({\n          tasks,\n          isShowingTask: !prevState.isShowingTask\n        }));\n      } else {\n        this.setState(prevState => ({\n          tasks: [],\n          isShowingTask: !prevState.isShowingTask\n        }));\n      }\n    };\n\n    this.mouseEnter = () => {\n      this.setState({\n        mouseInside: true\n      });\n    };\n\n    this.mouseLeave = () => {\n      this.setState({\n        mouseInside: true\n      });\n    };\n\n    this.mouseClick = () => {\n      this.setState({\n        mouseInside: false\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      tasks: [],\n      address: [],\n      isRed: false,\n      isShowingTask: false,\n      mouseInside: false\n    };\n  }\n\n  async componentDidMount() {\n    const user = await getUserByID(usersURL, this.props.id);\n    this.setState({\n      name: user.data.name,\n      email: user.data.email,\n      address: user.data.address\n    });\n  }\n\n  render() {\n    let colorStyle;\n    colorStyle = this.state.isRed ? 'redStyle' : 'greenStyle';\n    const tasksRep = this.state.tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tasks, {\n          todo: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 34\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    });\n\n    const adressUser = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid violet',\n        borderRadius: '12px',\n        padding: '5px',\n        backgroundColor: 'pink'\n      },\n      onClick: this.mouseClick,\n      children: [\"Street: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.address.street\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 76\n      }, this), \"City: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.address.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 72\n      }, this), \"Zip Code: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.address.zipcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 28\n    }, this);\n\n    const showingTaskWindow = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.isShowingTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid black',\n          borderRadius: '12px',\n          padding: '5px',\n          width: '300px',\n          height: '300px',\n          overflow: 'scroll',\n          margin: 'left',\n          position: 'absolute',\n          left: '700px'\n        },\n        children: tasksRep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 68\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 35\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", showingTaskWindow, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: col,\n        onLoad: this.redColorDiv,\n        onClick: this.showTasks,\n        style: {\n          border: '2px solid seagreen',\n          background: 'khaki',\n          borderRadius: '12px',\n          padding: '5px',\n          width: '300px',\n          height: '200px',\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"ID: \", this.props.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 65\n        }, this), \"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.mouseInside ? adressUser : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onMouseEnter: this.mouseEnter,\n          onMouseLeave: this.mouseLeave,\n          children: \"Other Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js"],"names":["Component","getUserByID","getUserTasks","uncompletedTask","Tasks","usersURL","Users","constructor","props","redColorDiv","taskStatus","id","setState","prevState","isRed","showTasks","state","isShowingTask","tasks","mouseEnter","mouseInside","mouseLeave","mouseClick","name","email","address","componentDidMount","user","data","render","colorStyle","tasksRep","map","task","index","adressUser","border","borderRadius","padding","backgroundColor","street","city","zipcode","showingTaskWindow","width","height","overflow","margin","position","left","col","background","textAlign"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { getUserByID} from \"../DAL_USERS\";\r\nimport { getUserTasks, uncompletedTask } from \"../DAL_TODOS\";\r\nimport Tasks from \"./Tasks\";\r\nimport \"./style.css\"\r\n\r\n\r\n\r\nconst usersURL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nexport default class Users extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {name:\"\", email:\"\", tasks:[], address:[], isRed:false, isShowingTask:false, mouseInside:false}\r\n    }\r\n\r\n \r\n\r\n    async componentDidMount()\r\n    {\r\n        const user = await getUserByID(usersURL, this.props.id)\r\n\r\n        this.setState({name:user.data.name, email:user.data.email, address:user.data.address})\r\n     \r\n    }\r\n\r\n       \r\n    redColorDiv = async()=>\r\n    {\r\n        \r\n        const taskStatus = await uncompletedTask(this.props.id)\r\n        if(taskStatus == false)\r\n        {\r\n             this.setState((prevState) => ({isRed:!prevState.isRed}))\r\n        }\r\n    }\r\n\r\n    showTasks = async()=>\r\n    {\r\n        if (!this.state.isShowingTask)\r\n        {\r\n            const tasks = await getUserTasks(this.props.id)\r\n            this.setState(prevState => ({tasks, isShowingTask:!prevState.isShowingTask}))\r\n        }\r\n        else\r\n        {\r\n            this.setState(prevState => ({tasks:[], isShowingTask:!prevState.isShowingTask}))\r\n        }\r\n    }\r\n\r\n    mouseEnter = () => {\r\n        this.setState({ mouseInside: true });\r\n    }\r\n\r\n    mouseLeave = () => {\r\n        this.setState({ mouseInside: true });\r\n    }\r\n\r\n    mouseClick = () => {\r\n        this.setState({ mouseInside: false });\r\n    }\r\n\r\n\r\n    render()\r\n    { \r\n        let colorStyle;\r\n        \r\n        colorStyle = this.state.isRed?'redStyle':'greenStyle'\r\n\r\n        const tasksRep = this.state.tasks.map((task,index) => {\r\n        return (<div key={index}><Tasks todo={task}/></div>)})\r\n        \r\n        \r\n        const adressUser = <div style={{ border: '2px solid violet', borderRadius: '12px', padding: '5px', backgroundColor: 'pink' }} onClick={this.mouseClick}>\r\n            Street: <input type='text' value={this.state.address.street} /><br />\r\n            City: <input type='text' value={this.state.address.city} /><br />\r\n            Zip Code: <input type='text' value={this.state.address.zipcode} /><br />\r\n        </div>\r\n\r\n\r\n        const showingTaskWindow = <div>{this.state.isShowingTask ? <div style={{border: '2px solid black', borderRadius: '12px', padding: '5px', width: '300px', height: '300px', overflow: 'scroll', margin: 'left', position: 'absolute', left: '700px'\r\n        }}>{tasksRep}</div> : ''}<br/><br/></div>\r\n\r\n\r\n\r\n        \r\n        return (\r\n        <div> {showingTaskWindow}\r\n        <div className ={col} onLoad={this.redColorDiv} onClick={this.showTasks} style={{ border: '2px solid seagreen',background:'khaki', borderRadius: '12px', padding: '5px', width: '300px', height: '200px', textAlign: 'left'}}>\r\n\r\n            <h4>ID: {this.props.id}</h4>\r\n            Name:<input type = \"text\" value ={this.state.name}/><br/>\r\n            Email:<input type = \"email\" value ={this.state.email}/><br/>\r\n           \r\n                    <div>\r\n                        {this.state.mouseInside ? adressUser : null}\r\n                    </div>\r\n            \r\n            <button onMouseEnter={this.mouseEnter} onMouseLeave={this.mouseLeave}>Other Data</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Update</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Delete</button><br/>\r\n             \r\n        </div>\r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}