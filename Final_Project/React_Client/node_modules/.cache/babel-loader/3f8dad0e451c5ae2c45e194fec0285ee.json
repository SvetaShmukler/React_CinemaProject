{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MovieNameComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { deleteMovie } from '../DALs/MoviesDAL';\nimport { checkIfSomeoneWatched, findMovieByName } from '../Utils/Movies_Utils';\nimport SubWatchedMovieComp from './SubscriptionWatchedMovieComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieNameComp() {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const [movie, setMovie] = useState({});\n  const [year, setYear] = useState(0);\n  const [genres, setGenres] = useState();\n  const [img, setImg] = useState();\n  const [checkIfWatched, setCheckIfWatched] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const permissions = useSelector(state => state.permissions); //Loading movie to the page:\n\n  useEffect(async () => {\n    setMovie(await findMovieByName(name));\n  }, []); //Loading the movie's info to the page:\n\n  useEffect(async () => {\n    var _movie$premiered, _movie$genres;\n\n    setYear((_movie$premiered = movie.premiered) === null || _movie$premiered === void 0 ? void 0 : _movie$premiered.slice(0, 4));\n    setGenres('\"' + ((_movie$genres = movie.genres) === null || _movie$genres === void 0 ? void 0 : _movie$genres.join('\", \"')) + '\"');\n    setImg(movie === null || movie === void 0 ? void 0 : movie.image);\n    setCheckIfWatched(await checkIfSomeoneWatched(movie === null || movie === void 0 ? void 0 : movie._id));\n  }, [movie]);\n\n  const editMovieButton = () => {\n    let bool = false;\n\n    for (let per of permissions) if (per === \"Update Movie\") bool = true;\n\n    if (bool) {\n      dispatch({\n        type: 'Save Movie For Edit i',\n        payload: movie._id\n      });\n      navigate('/mainPage/editMovie'); //navigate to editMovie page\n    } else alert(\"You Don't Have The Permission To Update Movie\");\n  };\n\n  const deleteMovieButton = async () => {\n    let bool = false;\n\n    for (let per of permissions) if (per === 'Delete Movies') bool = true;\n\n    if (bool) {\n      await deleteMovie(movie._id);\n      navigate('/mainPage/subscriptions/allMembers');\n    } else alert(\"You Don't Have The Permission To Delete Movies\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieNameDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [movie.name, \", \", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \"Geners: \", genres, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 47\n    }, this), checkIfWatched ? /*#__PURE__*/_jsxDEV(SubWatchedMovieComp, {\n      movieId: movie._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"smallBut\",\n      onClick: editMovieButton,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"smallBut\",\n      onClick: deleteMovieButton,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieNameComp, \"Wq+p7KfmIdEIEOn3ds0N1UIr8jk=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector];\n});\n\n_c = MovieNameComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieNameComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MovieNameComponent.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","deleteMovie","checkIfSomeoneWatched","findMovieByName","SubWatchedMovieComp","MovieNameComp","name","movie","setMovie","year","setYear","genres","setGenres","img","setImg","checkIfWatched","setCheckIfWatched","dispatch","navigate","permissions","state","premiered","slice","join","image","_id","editMovieButton","bool","per","type","payload","alert","deleteMovieButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { deleteMovie } from '../DALs/MoviesDAL';\nimport { checkIfSomeoneWatched, findMovieByName } from '../Utils/Movies_Utils';\nimport SubWatchedMovieComp from './SubscriptionWatchedMovieComponent';\n\nexport default function MovieNameComp() {\n    const { name } = useParams()\n    const [movie, setMovie] = useState({})\n    const [year, setYear] = useState(0)\n    const [genres, setGenres] = useState()\n    const [img, setImg] = useState()\n    const [checkIfWatched, setCheckIfWatched] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const permissions = useSelector(state => state.permissions)\n\n    //Loading movie to the page:\n    useEffect(async () => {\n        setMovie(await findMovieByName(name));\n    }, [])\n\n    //Loading the movie's info to the page:\n    useEffect(async () => {\n        setYear(movie.premiered?.slice(0, 4));\n        setGenres('\"' + movie.genres?.join('\", \"') + '\"');\n        setImg(movie?.image);\n        setCheckIfWatched(await checkIfSomeoneWatched(movie?._id))\n    }, [movie])\n\n    const editMovieButton = () =>\n    {\n        let bool = false\n        for (let per of permissions)\n            if (per === \"Update Movie\")\n                bool = true\n        if (bool) {\n            dispatch({ type: 'Save Movie For Edit i', payload: movie._id })\n            navigate('/mainPage/editMovie')//navigate to editMovie page\n        } else\n            alert(\"You Don't Have The Permission To Update Movie\")\n    }\n\n    const deleteMovieButton = async () =>\n    {\n        let bool = false\n        for (let per of permissions)\n            if (per === 'Delete Movies')\n                bool = true\n        if (bool) {\n            await deleteMovie(movie._id)\n            navigate('/mainPage/subscriptions/allMembers')\n        } else\n            alert(\"You Don't Have The Permission To Delete Movies\")\n    }\n\n    return (\n        <div className='movieNameDiv'>\n            <h3>{movie.name}, {year}</h3>\n            Geners: {genres}<br /><br />\n            <img src={img} alt={movie.name} /><br />\n            {checkIfWatched ? <SubWatchedMovieComp movieId={movie._id} />  : null}\n            <button className='smallBut' onClick={editMovieButton}>Edit</button>&nbsp;&nbsp;\n            <button className='smallBut' onClick={deleteMovieButton}>Delete</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}