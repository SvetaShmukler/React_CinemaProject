{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneEditUserComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { updateUserById } from \"../DALs/Users_DAL\";\nimport { getPermissions, getPermissionsArray, moviesPermissionsPressed, subscriptionsPermissionsPressed } from \"../Utils/Users_Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OneEditUser(props) {\n  _s();\n\n  //states:\n  const Navigate = useNavigate();\n  const [User, setUser] = useState({});\n  const [UserJSON, setUserJSON] = useState({});\n  const [Permissions, setPermissions] = useState({});\n  const [FirstName, setFirstName] = useState('');\n  const [LastName, setLastName] = useState('');\n  const [UserName, setUserName] = useState('');\n  const [SessionTimeOut, setSessionTimeOut] = useState(0);\n  const [PermissionsList, setPermissionsList] = useState([false, false, false, false, false, false, false, false]);\n  const [PermissionsSTRINGS] = useState([\"View Subscriptions\", \"Create Subscriptions\", \"Delete Subscriptions\", \"Update Subscriptions\", \"View Movies\", \"Create Movies\", \"Delete Movies\", \"Update Movie\"]);\n  const [PermissionsBOOL, setPermissionsBOOL] = useState([]);\n  const [refresh, setrefresh] = useState([]); //Loading all data in the inputs:\n\n  useEffect(() => {\n    const editUser = props.user;\n    setUser(editUser.user);\n    setUserJSON(editUser.userJson);\n    setPermissions(editUser.permissions.permissions);\n    const arr = getPermissionsArray(editUser.permissions.permissions);\n    setPermissionsList(arr);\n    setPermissionsBOOL(arr);\n    console.log(Permissions);\n  }, []); //Checking constantly the permission to \"check\" the \"view\" permissoin accordingly\n\n  useEffect(() => {\n    const arr = [...PermissionsBOOL];\n\n    if (subscriptionsPermissionsPressed(PermissionsBOOL)) {\n      //\"view permissions\"\n      arr[0] = true;\n      setPermissionsBOOL(arr);\n      setPermissionsList(arr);\n    }\n\n    if (moviesPermissionsPressed(PermissionsBOOL)) {\n      arr[4] = true;\n      setPermissionsBOOL(arr);\n      setPermissionsList(arr);\n    }\n  }, [refresh]); //Saving the client's inputs of permissions: \n\n  const changePermission = e => {\n    const arr = [...PermissionsList];\n    e.target.checked ? arr[e.target.name] = true : arr[e.target.name] = false;\n    setPermissionsList(arr);\n    setPermissionsBOOL(arr);\n    setrefresh(!refresh);\n  }; //Geting all the client inputs and updating users data in the DB:\n\n\n  const updatePermissions = async () => {\n    const newArr = getPermissions(Perm); //array of permissions\n\n    const newObj = {\n      //bielding object after updating\n      user: {\n        username: UserName ? UserName : User.username,\n        password: User.password\n      },\n      userJson: {\n        firstName: FirstName ? FirstName : UserJSON.firstName,\n        lastName: LastName ? LastName : UserJSON.lastName,\n        createdDate: UserJSON.createdDate,\n        sessionTimeOut: SessionTimeOut ? SessionTimeOut : UserJSON.sessionTimeOut\n      },\n      permissions: {\n        id: Permissions.id,\n        permissions: newArr ? newArr : Permissions.permissions\n      }\n    };\n    await updateUserById(newObj, User._id); // from Dal ---> update in DB\n\n    Navigate('/mainPage/usersManagment/allUsers'); // navigate back to all user   \n  }; //Permissions Checkboxes list:\n\n\n  let PermissionLister = '';\n  if (PermissionsBOOL[0] !== undefined) PermissionLister = PermissionsSTRINGS.map((per, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: index,\n      onChange: changePermission,\n      checked: PermissionsBOOL[index] ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 85\n    }, this), per, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 204\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 67\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"First Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: UserJSON.firstName,\n      onChange: e => setFirstName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 124\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 129\n    }, this), \"Last Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: UserJSON.lastName,\n      onChange: e => setLastName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 121\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 126\n    }, this), \"Username : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: User.username,\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 116\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 121\n    }, this), \"Session time out (Minutes) : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      defaultValue: UserJSON.sessionTimeOut,\n      onChange: e => setSessionTimeOut(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 151\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 156\n    }, this), \"Created data : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: UserJSON.createdDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 70\n    }, this), \"Permissions:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this), PermissionLister, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addUserButton\",\n      onClick: () => updatePermissions,\n      children: \"Update \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addUserButton\",\n      onClick: () => Navigate('/mainPage/usersManagment/allUsers'),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OneEditUser, \"ZEg1DBhHIWwomsIYUTq6a+oqbtA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OneEditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneEditUser\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneEditUserComponent.js"],"names":["React","useState","useEffect","useNavigate","updateUserById","getPermissions","getPermissionsArray","moviesPermissionsPressed","subscriptionsPermissionsPressed","OneEditUser","props","Navigate","User","setUser","UserJSON","setUserJSON","Permissions","setPermissions","FirstName","setFirstName","LastName","setLastName","UserName","setUserName","SessionTimeOut","setSessionTimeOut","PermissionsList","setPermissionsList","PermissionsSTRINGS","PermissionsBOOL","setPermissionsBOOL","refresh","setrefresh","editUser","user","userJson","permissions","arr","console","log","changePermission","e","target","checked","name","updatePermissions","newArr","Perm","newObj","username","password","firstName","lastName","createdDate","sessionTimeOut","id","_id","PermissionLister","undefined","map","per","index","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport { useNavigate } from \"react-router\"\nimport { updateUserById } from \"../DALs/Users_DAL\"\nimport { getPermissions, getPermissionsArray, moviesPermissionsPressed, subscriptionsPermissionsPressed } from \"../Utils/Users_Utils\"\nexport default function OneEditUser(props)\n{\n    //states:\n    const Navigate = useNavigate()\n    const [User, setUser] = useState({})\n    const [UserJSON, setUserJSON] = useState({})\n    const [Permissions, setPermissions] = useState({})\n    const [FirstName, setFirstName] = useState('')\n    const [LastName, setLastName] = useState('')\n    const [UserName, setUserName] = useState('')\n    const [SessionTimeOut, setSessionTimeOut] = useState(0)\n    const [PermissionsList, setPermissionsList] = useState([false, false, false, false, false, false, false, false])\n    const [PermissionsSTRINGS] = useState([\"View Subscriptions\", \"Create Subscriptions\", \"Delete Subscriptions\", \"Update Subscriptions\", \"View Movies\", \"Create Movies\", \"Delete Movies\", \"Update Movie\"])\n    const [PermissionsBOOL, setPermissionsBOOL] = useState([])\n    const [refresh, setrefresh] = useState([])\n\n   \n   //Loading all data in the inputs:\n    useEffect(() => {\n        const editUser = props.user;\n        setUser(editUser.user);\n        setUserJSON(editUser.userJson);\n        setPermissions(editUser.permissions.permissions);\n        const arr = getPermissionsArray(editUser.permissions.permissions)\n        setPermissionsList(arr)\n        setPermissionsBOOL(arr)\n        console.log(Permissions)\n    },[])\n\n    //Checking constantly the permission to \"check\" the \"view\" permissoin accordingly\n    useEffect(() => {\n        const arr = [...PermissionsBOOL]\n        if (subscriptionsPermissionsPressed(PermissionsBOOL)) {//\"view permissions\"\n            arr[0] = true\n            setPermissionsBOOL(arr)\n            setPermissionsList(arr)\n        }\n        if (moviesPermissionsPressed(PermissionsBOOL)) {\n            arr[4] = true\n            setPermissionsBOOL(arr)\n            setPermissionsList(arr)\n        }\n    }, [refresh])\n\n    //Saving the client's inputs of permissions: \n    const changePermission = (e) => {\n        const arr = [...PermissionsList]\n        e.target.checked ? arr[e.target.name] = true : arr[e.target.name] = false\n        setPermissionsList(arr)\n        setPermissionsBOOL(arr)\n        setrefresh(!refresh)\n    }\n\n    //Geting all the client inputs and updating users data in the DB:\n    const updatePermissions = async () => {\n        const newArr = getPermissions(Perm)//array of permissions\n        const newObj = {//bielding object after updating\n            user: {\n                username: UserName ? UserName : User.username,\n                password: User.password,\n            },\n                userJson: {\n                    firstName: FirstName ? FirstName : UserJSON.firstName,\n                    lastName: LastName ? LastName : UserJSON.lastName,\n                    createdDate: UserJSON.createdDate,\n                    sessionTimeOut: SessionTimeOut ? SessionTimeOut : UserJSON.sessionTimeOut,\n                },\n                permissions: {\n                    id: Permissions.id,\n                    permissions: newArr ? newArr : Permissions.permissions\n                }\n            }\n        await updateUserById(newObj, User._id)// from Dal ---> update in DB\n        Navigate ('/mainPage/usersManagment/allUsers')// navigate back to all user   \n    }\n    //Permissions Checkboxes list:\n    let PermissionLister = ''\n    if (PermissionsBOOL[0] !== undefined)\n        PermissionLister = PermissionsSTRINGS.map((per, index) => <span key={index}><input type='checkbox' name={index} onChange={changePermission} checked={PermissionsBOOL[index] ? true : false} />{per}<br /></span>)\n    return(\n        <div>\n            First Name : <input type ='text' defaultValue={UserJSON.firstName} onChange={e=>setFirstName(e.target.value)}/><br/><br/>\n            Last Name : <input type ='text' defaultValue={UserJSON.lastName} onChange={e=>setLastName(e.target.value)}/><br/><br/>\n            Username : <input type ='text' defaultValue={User.username} onChange={e=>setUserName(e.target.value)}/><br/><br/>\n            Session time out (Minutes) : <input type ='number'defaultValue={UserJSON.sessionTimeOut} onChange={e=>setSessionTimeOut(e.target.value)}/><br/><br/>\n            Created data : <input value={UserJSON.createdDate}/><br/><br/>\n            Permissions:<br/>\n            {PermissionLister}<br/>\n            <button className=\"addUserButton\" onClick = {() => updatePermissions} >Update </button>&nbsp;&nbsp;\n            <button className= \"addUserButton\" onClick={() => Navigate('/mainPage/usersManagment/allUsers')}>Cancel</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}