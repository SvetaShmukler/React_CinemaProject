{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js\";\nimport { Component } from \"react\";\nimport { getUserByID, getUserTasks } from \"../DAL\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todosURL = 'https://jsonplaceholder.typicode.com/todos';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      tasks: [],\n      task: true\n    };\n  }\n\n  async componentDidMount() {\n    const user = await getUserByID(usersURL, this.props.userID);\n    this.setState({\n      name: user.data.name,\n      email: user.data.email\n    });\n  }\n\n  async componentDidUpdate() {\n    const task = await getUserTasks(this.props.userID);\n    this.setState({\n      task: task.data.task\n    });\n\n    if (this.state.task === true) {\n      console.log(\"its true\");\n    } else {\n      console.log(\"its false\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        background: 'khaki',\n        borderRadius: '12px',\n        padding: '5px',\n        width: '300px',\n        height: '150px',\n        margin: 'auto',\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"ID: \", this.props.userID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 65\n      }, this), \"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 68\n      }, this), \"Task:\", this.state.task, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Other Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js"],"names":["Component","getUserByID","getUserTasks","todosURL","usersURL","Users","constructor","props","state","name","email","tasks","task","componentDidMount","user","userID","setState","data","componentDidUpdate","console","log","render","border","background","borderRadius","padding","width","height","margin","textAlign"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAqBC,YAArB,QAAwC,QAAxC;;AAIA,MAAMC,QAAQ,GAAG,4CAAjB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;AAEA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CACf;AACIM,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAC,EAAN;AAASC,MAAAA,KAAK,EAAC,EAAf;AAAkBC,MAAAA,KAAK,EAAC,EAAxB;AAA2BC,MAAAA,IAAI,EAAC;AAAhC,KAAb;AACH;;AAEsB,QAAjBC,iBAAiB,GACvB;AACI,UAAMC,IAAI,GAAG,MAAMb,WAAW,CAACG,QAAD,EAAW,KAAKG,KAAL,CAAWQ,MAAtB,CAA9B;AAEA,SAAKC,QAAL,CAAc;AAACP,MAAAA,IAAI,EAACK,IAAI,CAACG,IAAL,CAAUR,IAAhB;AAAsBC,MAAAA,KAAK,EAACI,IAAI,CAACG,IAAL,CAAUP;AAAtC,KAAd;AAEH;;AAGuB,QAAlBQ,kBAAkB,GACxB;AACI,UAAMN,IAAI,GAAG,MAAMV,YAAY,CAAC,KAAKK,KAAL,CAAWQ,MAAZ,CAA/B;AACA,SAAKC,QAAL,CAAc;AAACJ,MAAAA,IAAI,EAACA,IAAI,CAACK,IAAL,CAAUL;AAAhB,KAAd;;AACA,QAAI,KAAKJ,KAAL,CAAWI,IAAX,KAAkB,IAAtB,EACA;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAHD,MAGK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AACJ;;AAEDC,EAAAA,MAAM,GACN;AAEI,wBAAQ;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,iBAAV;AAA4BC,QAAAA,UAAU,EAAC,OAAvC;AAAgDC,QAAAA,YAAY,EAAE,MAA9D;AAAsEC,QAAAA,OAAO,EAAE,KAA/E;AAAsFC,QAAAA,KAAK,EAAE,OAA7F;AAAsGC,QAAAA,MAAM,EAAE,OAA9G;AAAsHC,QAAAA,MAAM,EAAE,MAA9H;AAAsIC,QAAAA,SAAS,EAAE;AAAjJ,OAAZ;AAAA,8BAEJ;AAAA,2BAAS,KAAKtB,KAAL,CAAWQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,wBAGC;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,KAAK,EAAG,KAAKP,KAAL,CAAWC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHD,eAGgD;AAAA;AAAA;AAAA;AAAA,cAHhD,yBAIE;AAAO,QAAA,IAAI,EAAG,OAAd;AAAsB,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWE;AAAzC;AAAA;AAAA;AAAA;AAAA,cAJF,eAImD;AAAA;AAAA;AAAA;AAAA,cAJnD,WAKE,KAAKF,KAAL,CAAWI,IALb,eAMJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANI,2CAOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPI,2CAQJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAYH;;AA3CL","sourcesContent":["import { Component } from \"react\";\r\nimport { getUserByID,getUserTasks} from \"../DAL\";\r\n\r\n\r\n\r\nconst todosURL = 'https://jsonplaceholder.typicode.com/todos'\r\nconst usersURL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nexport default class Users extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {name:\"\",email:\"\",tasks:[],task:true}\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const user = await getUserByID(usersURL, this.props.userID)\r\n\r\n        this.setState({name:user.data.name, email:user.data.email})\r\n   \r\n    }\r\n\r\n\r\n    async componentDidUpdate()\r\n    {\r\n        const task = await getUserTasks(this.props.userID)\r\n        this.setState({task:task.data.task})\r\n        if (this.state.task===true)\r\n        {\r\n            console.log(\"its true\")\r\n        }else{\r\n            console.log(\"its false\")\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n       \r\n        return (<div style={{ border: '2px solid black',background:'khaki', borderRadius: '12px', padding: '5px', width: '300px', height: '150px',margin: 'auto', textAlign: 'left'}}>\r\n\r\n            <h4>ID: {this.props.userID}</h4>\r\n            Name:<input type = \"text\" value ={this.state.name}/><br/>\r\n            Email:<input type = \"email\" value ={this.state.email}/><br/>\r\n            Task:{this.state.task}\r\n            <button>Other Data</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Update</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Delete</button>\r\n          \r\n      \r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}