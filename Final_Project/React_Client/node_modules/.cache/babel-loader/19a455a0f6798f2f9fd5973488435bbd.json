{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js\";\nimport { Component } from \"react\";\nimport { getUserByID, getUserTodos, getUserTodosData } from \"../DAL\";\nimport Tasks from \"./Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\nexport default class Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showTasks = async () => {\n      if (!this.state.isShowingTask) {\n        const tasks = await getUserTodos(this.props.user.id);\n        this.setState(prevState => ({\n          tasks,\n          isShowingTask: !prevState.isShowingTask\n        }));\n      } else {\n        this.setState(prevState => ({\n          tasks: [],\n          isShowingTask: !prevState.isShowingTask\n        }));\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      tasks: [],\n      isShowingTask: false\n    };\n  }\n\n  async componentDidMount() {\n    const user = await getUserByID(usersURL, this.props.userID);\n    this.setState({\n      name: user.data.name,\n      email: user.data.email\n    });\n  }\n\n  /*async componentDidUpdate (prevProps)\r\n  {\r\n      if(this.props.userID !== prevProps.userID)\r\n      {\r\n          const alltodos = await getUserTodosData(this.props.userID)\r\n              \r\n          this.setState({todos:alltodos})\r\n          \r\n      }\r\n  }*/\n  render() {\n    const tasksRep = this.state.tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Tasks, {\n          todo: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }); //const colorborder;\n    //colorborder = this.state.isRed?'redtyle':'greenStyle'\n    //className ={colorborder}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        background: 'khaki',\n        borderRadius: '12px',\n        padding: '5px',\n        width: '300px',\n        height: '150px',\n        margin: 'auto',\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"ID: \", this.props.userID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), \"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 65\n      }, this), \"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 68\n      }, this), \"Show tas\", tasksRep, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Other Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Users.js"],"names":["Component","getUserByID","getUserTodos","getUserTodosData","Tasks","usersURL","Users","constructor","props","showTasks","state","isShowingTask","tasks","user","id","setState","prevState","name","email","componentDidMount","userID","data","render","tasksRep","map","task","index","border","background","borderRadius","padding","width","height","margin","textAlign"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { getUserByID,getUserTodos,getUserTodosData} from \"../DAL\";\r\nimport Tasks from \"./Tasks\";\r\n\r\n\r\n\r\nconst usersURL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nexport default class Users extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {name:\"\",email:\"\",tasks:[],isShowingTask:false}\r\n    }\r\n\r\n \r\n\r\n    async componentDidMount()\r\n    {\r\n        const user = await getUserByID(usersURL, this.props.userID)\r\n\r\n        this.setState({name:user.data.name, email:user.data.email})\r\n     \r\n    }\r\n\r\n    showTasks = async()=>\r\n    {\r\n        if (!this.state.isShowingTask)\r\n        {\r\n            const tasks = await getUserTodos(this.props.user.id)\r\n            this.setState(prevState => ({tasks, isShowingTask:!prevState.isShowingTask}))\r\n        }\r\n        else\r\n        {\r\n            this.setState(prevState => ({tasks:[], isShowingTask:!prevState.isShowingTask}))\r\n        }\r\n    }\r\n\r\n        \r\n    /*async componentDidUpdate (prevProps)\r\n    {\r\n        if(this.props.userID !== prevProps.userID)\r\n        {\r\n            const alltodos = await getUserTodosData(this.props.userID)\r\n                \r\n            this.setState({todos:alltodos})\r\n            \r\n        }\r\n    }*/\r\n\r\n   \r\n\r\n\r\n    render()\r\n    {   const tasksRep = this.state.tasks.map((task,index) => {\r\n        return (<li key={index}><Tasks todo={task}/></li>)})\r\n        //const colorborder;\r\n        //colorborder = this.state.isRed?'redtyle':'greenStyle'\r\n        //className ={colorborder}\r\n        \r\n        return (<div  style={{ border: '2px solid black',background:'khaki', borderRadius: '12px', padding: '5px', width: '300px', height: '150px',margin: 'auto', textAlign: 'left'}}>\r\n\r\n            <h4>ID: {this.props.userID}</h4>\r\n            Name:<input type = \"text\" value ={this.state.name}/><br/>\r\n            Email:<input type = \"email\" value ={this.state.email}/><br/>\r\n            Show tas\r\n\r\n            {tasksRep}\r\n            \r\n            \r\n            <button>Other Data</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Update</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button>Delete</button>\r\n          \r\n      \r\n        </div>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}