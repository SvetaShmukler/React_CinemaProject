{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Main.js\";\nimport React, { Component } from 'react';\nimport { getAllUsers } from '../DALs/DAL_USERS';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = e => {\n      let searchedText = e.target.value;\n      const string = searchedText.toUpperCase();\n      const usersArr = this.state.filteredUsers;\n      const newArr = usersArr.filter(user => user.name.toUpperCase().includes(string) || user.email.toUpperCase().includes(string));\n      this.setState({\n        filteredUsers: newArr\n      }); // console.log(\"Search text is: \" +searchedText)\n      // if (searchedText.length===0)\n      // {\n      //     console.log('in if');\n      //     console.log(this.state.users);\n      //      this.setState({filteredUsers:this.state.users})\n      //      console.log(\"test\")\n      // }\n      // else\n      // {\n      //     this.setState({filteredUsers:this.state.users})\n      //     console.log(\"Filtered users --->before filter:\")\n      //     console.log(this.state.filteredUsers)\n      //     const searchedUsers = this.state.users.filter((user)=>user.name.includes(searchedText)||user.email.includes(searchedText))\n      //     console.log(\"filter:\")\n      //     console.log(searchedUsers)\n      //     this.setState({filteredUsers:[...searchedUsers]})\n      //     console.log(\"Filtered users --->after filter:\")\n      //     console.log(this.state.filteredUsers)\n      // }\n    };\n\n    this.state = {\n      users: [],\n      filteredUsers: [],\n      names: [],\n      emails: []\n    };\n  }\n\n  async componentDidMount() {\n    const users = await getAllUsers(usersURL);\n    this.setState({\n      users: users.data\n    });\n    this.setState({\n      filteredUsers: users.data\n    });\n    this.setState({\n      names: users.data.name\n    });\n    this.setState({\n      emails: users.data.email\n    });\n  }\n\n  render() {\n    const repUsers = this.state.filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Users, {\n        user: user,\n        id: user.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 135\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 72\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        background: 'pink',\n        borderRadius: '12px',\n        padding: '5px',\n        width: '500px',\n        textAlign: 'center',\n        margin: 'auto'\n      },\n      children: [\"Search \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 43\n      }, this), repUsers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Main.js"],"names":["React","Component","getAllUsers","Users","usersURL","Main","constructor","handleInputChange","e","searchedText","target","value","string","toUpperCase","usersArr","state","filteredUsers","newArr","filter","user","name","includes","email","setState","users","names","emails","componentDidMount","data","render","repUsers","map","index","id","border","background","borderRadius","padding","width","textAlign","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { getAllUsers } from '../DALs/DAL_USERS';\r\nimport Users from './Users';\r\n\r\nconst usersURL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { users: [], filteredUsers: [], names: [], emails: [] }\r\n    }\r\n    async componentDidMount() {\r\n        const users = await getAllUsers(usersURL)\r\n        this.setState({ users: users.data })\r\n        this.setState({ filteredUsers: users.data })\r\n        this.setState({ names: users.data.name })\r\n        this.setState({ emails: users.data.email })\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        let searchedText = e.target.value;\r\n        const string = searchedText.toUpperCase();\r\n        const usersArr = this.state.filteredUsers\r\n        const newArr = usersArr.filter((user) => ((user.name.toUpperCase().includes(string)) || (user.email.toUpperCase().includes(string))));\r\n        this.setState({ filteredUsers: newArr })\r\n\r\n\r\n\r\n\r\n\r\n        // console.log(\"Search text is: \" +searchedText)\r\n\r\n        // if (searchedText.length===0)\r\n        // {\r\n        //     console.log('in if');\r\n        //     console.log(this.state.users);\r\n        //      this.setState({filteredUsers:this.state.users})\r\n        //      console.log(\"test\")\r\n        // }\r\n        // else\r\n        // {\r\n        //     this.setState({filteredUsers:this.state.users})\r\n\r\n        //     console.log(\"Filtered users --->before filter:\")\r\n        //     console.log(this.state.filteredUsers)\r\n\r\n        //     const searchedUsers = this.state.users.filter((user)=>user.name.includes(searchedText)||user.email.includes(searchedText))\r\n\r\n        //     console.log(\"filter:\")\r\n        //     console.log(searchedUsers)\r\n\r\n        //     this.setState({filteredUsers:[...searchedUsers]})\r\n\r\n\r\n        //     console.log(\"Filtered users --->after filter:\")\r\n        //     console.log(this.state.filteredUsers)\r\n\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const repUsers = this.state.filteredUsers.map((user, index) => <div key={index}><Users user={user} key={index} id={user.id} /><br /></div>)\r\n        return (\r\n            <div style={{ border: '2px solid black', background: 'pink', borderRadius: '12px', padding: '5px', width: '500px', textAlign: 'center', margin: 'auto' }}>\r\n\r\n                Search <input type=\"text\" onChange={this.handleInputChange} />&nbsp;&nbsp;\r\n                <button>Add</button><br /><br />\r\n                {repUsers}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}