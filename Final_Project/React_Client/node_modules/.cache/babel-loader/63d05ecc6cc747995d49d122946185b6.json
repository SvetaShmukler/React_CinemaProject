{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/AllUsersComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllUsers } from '../DALs/Users_DAL';\nimport OneUserComp from './OneUserComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllUsersComp() {\n  _s();\n\n  var _users$users;\n\n  const [users, setUsers] = useState();\n  const state = useSelector(state => state);\n  const dispatch = useDispatch(); //Loading all users then state of users has refresh:\n\n  useEffect(async () => {\n    setUsers(await getAllUsers());\n  }, [state.refresh]);\n  const allUsersList = users === null || users === void 0 ? void 0 : (_users$users = users.users) === null || _users$users === void 0 ? void 0 : _users$users.map((user, index) => /*#__PURE__*/_jsxDEV(OneUserComp, {\n    id: user._id,\n    cd: () => dispatch({\n      type: \"Refresh \"\n    }),\n    ket: index\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 61\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Users Managment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allUsersList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllUsersComp, \"FtZKT5c/bt1ibMX55ZM88eaAmKw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AllUsersComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsersComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/AllUsersComponent.js"],"names":["React","useEffect","useState","useSelector","useDispatch","getAllUsers","OneUserComp","AllUsersComp","users","setUsers","state","dispatch","refresh","allUsersList","map","user","index","_id","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAIA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAMQ,KAAK,GAAGP,WAAW,CAACO,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAHmC,CAKnC;;AACAH,EAAAA,SAAS,CAAC,YAAY;AAClBQ,IAAAA,QAAQ,CAAC,MAAMJ,WAAW,EAAlB,CAAR;AACH,GAFQ,EAEN,CAACK,KAAK,CAACE,OAAP,CAFM,CAAT;AAIA,QAAMC,YAAY,GAAGL,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAEA,KAAV,iDAAG,aAAcM,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,WAAD;AAAa,IAAA,EAAE,EAAED,IAAI,CAACE,GAAtB;AAA2B,IAAA,EAAE,EAAE,MAAIN,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA3C;AAAkE,IAAA,GAAG,EAAEF;AAAvE;AAAA;AAAA;AAAA;AAAA,UAAnC,CAArB;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAtBuBN,Y;UAENJ,W,EACGC,W;;;KAHGG,Y","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getAllUsers } from '../DALs/Users_DAL'\nimport OneUserComp from './OneUserComponent'\n\n\n\nexport default function AllUsersComp() {\n    const [users, setUsers] = useState()\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    \n    //Loading all users then state of users has refresh:\n    useEffect(async () => {\n        setUsers(await getAllUsers())\n    }, [state.refresh])\n\n    const allUsersList = users?.users?.map((user, index) => <OneUserComp id={user._id} cd={()=>dispatch({ type: \"Refresh \"})} ket={index}/>)\n    return(\n        <div>\n            <h3>Users Managment</h3>\n            <div>\n                {allUsersList}\n            </div>\n        </div>\n    )\n    \n    \n    \n}"]},"metadata":{},"sourceType":"module"}