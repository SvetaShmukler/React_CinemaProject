{"ast":null,"code":"import axios from 'axios';\nconst todosURL = 'https://jsonplaceholder.typicode.com/todos';\n\nconst getAll = async url => await axios.get(url); //Geting the todos of specific user by its ID:\n\n\nconst getUserTasks = async id => {\n  const userTodos = await getAll(`${todosURL}?userId=${id}`);\n  const dataTodos = userTodos.data;\n  return dataTodos;\n}; //Function that checks tasks \n\n\nconst uncompletedTask = async id => {\n  const userTodos = await getAll(`${todosURL}?userId=${id}`);\n  const dataTodos = userTodos.data;\n  const result = dataTodos.find(task => task.completed === \"false\");\n\n  if (result === \"\") {\n    return true;\n  }\n\n  if (result === \"false\") {\n    return false;\n  }\n};\n\nexport { getUserTasks, uncompletedTask };","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/DALs/DAL_TODOS.js"],"names":["axios","todosURL","getAll","url","get","getUserTasks","id","userTodos","dataTodos","data","uncompletedTask","result","find","task","completed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEA,MAAMC,MAAM,GAAG,MAAOC,GAAP,IAAc,MAAMH,KAAK,CAACI,GAAN,CAAUD,GAAV,CAAnC,C,CAEA;;;AACA,MAAME,YAAY,GAAG,MAAOC,EAAP,IACrB;AACI,QAAMC,SAAS,GAAG,MAAML,MAAM,CAAE,GAAED,QAAS,WAAUK,EAAG,EAA1B,CAA9B;AACA,QAAME,SAAS,GAAGD,SAAS,CAACE,IAA5B;AACA,SAAOD,SAAP;AACH,CALD,C,CAMA;;;AACA,MAAME,eAAe,GAAG,MAAOJ,EAAP,IACxB;AACI,QAAMC,SAAS,GAAG,MAAML,MAAM,CAAE,GAAED,QAAS,WAAUK,EAAG,EAA1B,CAA9B;AACA,QAAME,SAAS,GAAGD,SAAS,CAACE,IAA5B;AACA,QAAME,MAAM,GAAGH,SAAS,CAACI,IAAV,CAAeC,IAAI,IAAEA,IAAI,CAACC,SAAL,KAAiB,OAAtC,CAAf;;AACA,MAAIH,MAAM,KAAG,EAAb,EACA;AACI,WAAO,IAAP;AACH;;AACD,MAAIA,MAAM,KAAG,OAAb,EACA;AACI,WAAO,KAAP;AACH;AAEJ,CAdD;;AAgBA,SAAQN,YAAR,EAAsBK,eAAtB","sourcesContent":["import axios from 'axios';\nconst todosURL = 'https://jsonplaceholder.typicode.com/todos'\n\nconst getAll = async (url) =>await axios.get(url);\n\n//Geting the todos of specific user by its ID:\nconst getUserTasks = async (id) => \n{\n    const userTodos = await getAll(`${todosURL}?userId=${id}`)\n    const dataTodos = userTodos.data\n    return dataTodos;\n}\n//Function that checks tasks \nconst uncompletedTask = async (id) =>\n{\n    const userTodos = await getAll(`${todosURL}?userId=${id}`)\n    const dataTodos = userTodos.data\n    const result = dataTodos.find(task=>task.completed===\"false\")\n    if (result===\"\")\n    {\n        return true\n    }\n    if (result===\"false\")\n    {\n        return false\n    }\n \n}\n\nexport {getUserTasks, uncompletedTask }  \n"]},"metadata":{},"sourceType":"module"}