{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneUserComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUser, getUserByID } from '../DALs/Users_DAL';\nimport { checkIfAdmin } from '../Utils/Users_Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OneUserComp(props) {\n  _s();\n\n  var _userJson, _userJson2, _user, _userJson3, _userJson4, _permissions;\n\n  //props --->to get id of each user from parrent component (usersManagmentComp)\n  //States:\n  const [User, setUser] = useState({});\n  const [Permissions, setPermissions] = useState();\n  const [UserJSON, setUserJSON] = useState({});\n  const [Admin, setAdmin] = useState(); //to check if admin, becausean admin has not a button to delete user\n\n  const Navigate = useNavigate();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state); //Loading all the users obj to the state:\n\n  useEffect(async () => {\n    const id = props.id; //from UsersManagmentComp\n\n    const user = await getUserByID(id);\n    setAdmin(await checkIfAdmin(user.user));\n    setUser(user.user);\n    setPermissions(user.permissions);\n    setUserJSON(user.userJson);\n  }, [props.id, state.refresh]); //Navigate to edit user page:\n\n  const toEditUser = () => {\n    dispatch({\n      type: \"Edit user and save\",\n      payload: {\n        user: User,\n        userJson: UserJSON,\n        permissions: Permissions\n      }\n    });\n    Navigate('/mainPage/editUser');\n  }; //To delete user by id:\n\n\n  const toDeleteUser = async () => {\n    await deleteUser(user._id);\n    props.cb();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"oneUserDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), (_userJson = userJson) === null || _userJson === void 0 ? void 0 : _userJson.firstName, \" \", (_userJson2 = userJson) === null || _userJson2 === void 0 ? void 0 : _userJson2.lastName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 82\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Username :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), (_user = user) === null || _user === void 0 ? void 0 : _user.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Session time out(Minutes) :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this), (_userJson3 = userJson) === null || _userJson3 === void 0 ? void 0 : _userJson3.sessionTimeOut, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 82\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Created date :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this), (_userJson4 = userJson) === null || _userJson4 === void 0 ? void 0 : _userJson4.createdDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 66\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Permissions :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this), (_permissions = permissions) === null || _permissions === void 0 ? void 0 : _permissions.permissions.join(\"','\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 80\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"usersButton2\",\n      onClick: toEditUser,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this), !isAdmin ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"usersButton2\",\n      onClick: toDeleteUser,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }, this) : null, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 101\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 106\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OneUserComp, \"k7uSNqqEcXNi/YdjyvBaE9chbwA=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = OneUserComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneUserComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneUserComponent.js"],"names":["React","useEffect","useState","useNavigate","useDispatch","useSelector","deleteUser","getUserByID","checkIfAdmin","OneUserComp","props","User","setUser","Permissions","setPermissions","UserJSON","setUserJSON","Admin","setAdmin","Navigate","dispatch","state","id","user","permissions","userJson","refresh","toEditUser","type","payload","toDeleteUser","_id","cb","firstName","lastName","username","sessionTimeOut","createdDate","join","isAdmin"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { useNavigate } from 'react-router'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { deleteUser, getUserByID } from '../DALs/Users_DAL'\nimport { checkIfAdmin } from '../Utils/Users_Utils'\n\nexport default function OneUserComp(props) {//props --->to get id of each user from parrent component (usersManagmentComp)\n    //States:\n    const [User, setUser] = useState({})\n    const [Permissions, setPermissions] = useState()\n    const [UserJSON, setUserJSON] = useState({})\n    const [Admin, setAdmin] = useState()//to check if admin, becausean admin has not a button to delete user\n    const Navigate = useNavigate()\n    const dispatch = useDispatch()\n    const state = useSelector(state => state)\n\n    //Loading all the users obj to the state:\n    useEffect(async () => {\n        const id = props.id//from UsersManagmentComp\n        const user = await getUserByID(id)\n        setAdmin(await checkIfAdmin(user.user))\n        setUser(user.user)\n        setPermissions(user.permissions)\n        setUserJSON(user.userJson)\n    }, [props.id, state.refresh])\n\n    //Navigate to edit user page:\n    const toEditUser = () =>\n    {\n        dispatch({ type: \"Edit user and save\", payload: { user: User, userJson: UserJSON, permissions: Permissions}})\n        Navigate('/mainPage/editUser')\n    }\n    //To delete user by id:\n    const toDeleteUser = async() =>\n    {\n       await deleteUser(user._id)\n        props.cb()\n    }\n\n    return(\n        <div className='oneUserDiv'>\n           <br/><strong>Name :</strong>{userJson?.firstName} {userJson?.lastName}<br/> \n           <strong>Username :</strong>{user?.username}<br/>\n           <strong>Session time out(Minutes) :</strong>{userJson?.sessionTimeOut}<br/>\n           <strong>Created date :</strong>{userJson?.createdDate}<br/>\n           <strong>Permissions :</strong>{permissions?.permissions.join(\"','\")}<br/><br/>\n           <button className='usersButton2' onClick={toEditUser}>Edit</button>\n           {!isAdmin?<button className='usersButton2' onClick={toDeleteUser}>Delete</button>: null} <br/><br/>        \n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}