{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/LoginPageComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { checkIfUserExist, findUserID } from '../Utils/Users_Utils';\nimport { getUserByID } from '../DALs/Users_DAL';\nimport '../Style/style.css'; //Login Page (Form with login for users)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate(); // for transiton to another page\n\n  const dispatch = useDispatch(); //Checking of login of inputs:\n\n  const checkAndSend = async () => {\n    const inputUser = {\n      username: username,\n      password: password ? password : '' //if password exist password=password, if not password=\"\".\n\n    };\n    console.log(inputUser);\n\n    if (await checkIfUserExist(inputUser)) {\n      //checkIfUserExist from users Utils\n      if (inputUser.password === '') alert('Create Account');else {\n        const id = await findUserID(inputUser); //id of user by user name (findUserID--->from Utils)\n\n        const user = await getUserByID(id); // getUserByID ( from DAL)\n\n        dispatch({\n          type: \"Save User\",\n          payload: user\n        }); //Saving the user's data in redux\n\n        dispatch({\n          type: \"Save Permissions\",\n          payload: user.permissions.permissions\n        }); //saving the permission data in redux\n\n        navigate('/mainPage'); //navigating to mainpage\n      }\n    } else alert('The Username Or Password Is Incorrect');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies -Subscriptions Web Site\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log in Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: e => setUserName({ ...username,\n        username: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 133\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 138\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      onChange: e => setPassword({ ...password,\n        password: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 132\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAndSend,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 67\n    }, this), \"New User ? :\", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"createAccount\",\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 79\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"8zrmt2ay5Csu85vjQEEJmieJW8I=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/LoginPageComponent.js"],"names":["React","useState","useNavigate","Link","useDispatch","checkIfUserExist","findUserID","getUserByID","LoginPage","username","setUserName","password","setPassword","navigate","dispatch","checkAndSend","inputUser","console","log","alert","id","user","type","payload","permissions","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport  { useState } from 'react'\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux';\nimport { checkIfUserExist,findUserID } from '../Utils/Users_Utils';\nimport { getUserByID } from '../DALs/Users_DAL';\nimport '../Style/style.css'\n\n//Login Page (Form with login for users)\n\nexport default function LoginPage() {\n\n    const [username,setUserName] = useState();\n    const [password,setPassword] = useState();\n\n    const navigate = useNavigate(); // for transiton to another page\n    const dispatch = useDispatch();\n\n    //Checking of login of inputs:\n    const checkAndSend = async () => {\n        const inputUser = {\n            username: username,\n            password: password ? password : ''//if password exist password=password, if not password=\"\".\n        }\n        console.log(inputUser)\n        if (await checkIfUserExist(inputUser)) {//checkIfUserExist from users Utils\n            if (inputUser.password === '')\n                alert('Create Account')\n            else {\n                const id = await findUserID(inputUser)//id of user by user name (findUserID--->from Utils)\n                const user = await getUserByID(id)// getUserByID ( from DAL)\n                dispatch({ type: \"Save User\", payload: user })//Saving the user's data in redux\n                dispatch({ type: \"Save Permissions\", payload: user.permissions.permissions })//saving the permission data in redux\n                navigate('/mainPage')//navigating to mainpage\n            }\n        } else\n            alert('The Username Or Password Is Incorrect')\n    }\n\n    return (\n        <div className='loginStyle'>\n            <h1>Movies -Subscriptions Web Site</h1>\n            <h2>Log in Page</h2>\n                    User Name: <input type=\"text\" name=\"username\" onChange={e=>setUserName({...username,username:e.target.value})}/><br/><br/>\n                    Password: <input type=\"text\" name=\"password\" onChange={e=>setPassword({...password,password:e.target.value})}/><br/>\n                    <button  onClick={checkAndSend}>Login</button><br/>\n                    New User ? :<Link to=\"createAccount\">Create Account</Link><br/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}