{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MovieNameComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport SubWatchedMovieComp from './SubscriptionWatchedMovieComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieNameComp() {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const [movie, setMovie] = useState({});\n  const [year, setYear] = useState(0);\n  const [geners, setGeners] = useState();\n  const [img, setImg] = useState();\n  const [checkIfWatched, setCheckIfWatched] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const permissions = useSelector(state => state.permissions); //Loading movie to the page:\n\n  useEffect(async () => {\n    setMovie(await fin(name));\n  }, []); //this useEffect is loading the movie's info to the page\n\n  useEffect(async () => {\n    var _Movie$premiered, _Movie$geners, _Movie, _Movie2;\n\n    setYear((_Movie$premiered = Movie.premiered) === null || _Movie$premiered === void 0 ? void 0 : _Movie$premiered.slice(0, 4));\n    setGeners('\"' + ((_Movie$geners = Movie.geners) === null || _Movie$geners === void 0 ? void 0 : _Movie$geners.join('\", \"')) + '\"');\n    setImageUrl((_Movie = Movie) === null || _Movie === void 0 ? void 0 : _Movie.image);\n    setCheckIfWatched(await checkIfSomeoneWatched((_Movie2 = Movie) === null || _Movie2 === void 0 ? void 0 : _Movie2._id));\n  }, [Movie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [movie.name, \", \", Year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \"Geners: \", geners, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 47\n    }, this), checkIfWatched ? /*#__PURE__*/_jsxDEV(SubWatchedMovieComp, {\n      movieId: movie._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editMovie,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteMovie,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieNameComp, \"+dgSwfmpaUmLcrZWlzLc37Hd7VE=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector];\n});\n\n_c = MovieNameComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieNameComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/MovieNameComponent.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","SubWatchedMovieComp","MovieNameComp","name","movie","setMovie","year","setYear","geners","setGeners","img","setImg","checkIfWatched","setCheckIfWatched","dispatch","navigate","permissions","state","fin","Movie","premiered","slice","join","setImageUrl","image","checkIfSomeoneWatched","_id","Year","editMovie","deleteMovie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAA1B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,EAA9B;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,WAAW,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B,CAToC,CAWpC;;AACArB,EAAAA,SAAS,CAAC,YAAY;AAClBU,IAAAA,QAAQ,CAAC,MAAMa,GAAG,CAACf,IAAD,CAAV,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT,CAZoC,CAgBpC;;AACAR,EAAAA,SAAS,CAAC,YAAY;AAAA;;AAClBY,IAAAA,OAAO,qBAACY,KAAK,CAACC,SAAP,qDAAC,iBAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAD,CAAP;AACAZ,IAAAA,SAAS,CAAC,wBAAMU,KAAK,CAACX,MAAZ,kDAAM,cAAcc,IAAd,CAAmB,MAAnB,CAAN,IAAmC,GAApC,CAAT;AACAC,IAAAA,WAAW,WAACJ,KAAD,2CAAC,OAAOK,KAAR,CAAX;AACAX,IAAAA,iBAAiB,CAAC,MAAMY,qBAAqB,YAACN,KAAD,4CAAC,QAAOO,GAAR,CAA5B,CAAjB;AACH,GALQ,EAKN,CAACP,KAAD,CALM,CAAT;AAOA,sBACI;AAAA,4BACI;AAAA,iBAAKf,KAAK,CAACD,IAAX,QAAmBwB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,cAEanB,MAFb,eAEoB;AAAA;AAAA;AAAA;AAAA,YAFpB,eAE0B;AAAA;AAAA;AAAA;AAAA,YAF1B,eAGI;AAAK,MAAA,GAAG,EAAEE,GAAV;AAAe,MAAA,GAAG,EAAEN,KAAK,CAACD;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAGsC;AAAA;AAAA;AAAA;AAAA,YAHtC,EAIKS,cAAc,gBAAG,QAAC,mBAAD;AAAqB,MAAA,OAAO,EAAER,KAAK,CAACsB;AAApC;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiD,IAJpE,eAKI;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlCuB3B,a;UACHF,S,EAMAH,W,EACAE,W,EACGD,W;;;KATAI,a","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport SubWatchedMovieComp from './SubscriptionWatchedMovieComponent';\n\nexport default function MovieNameComp() {\n    const { name } = useParams()\n    const [movie, setMovie] = useState({})\n    const [year, setYear] = useState(0)\n    const [geners, setGeners] = useState()\n    const [img, setImg] = useState()\n    const [checkIfWatched, setCheckIfWatched] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const permissions = useSelector(state => state.permissions)\n\n    //Loading movie to the page:\n    useEffect(async () => {\n        setMovie(await fin(name));\n    }, [])\n\n    //this useEffect is loading the movie's info to the page\n    useEffect(async () => {\n        setYear(Movie.premiered?.slice(0, 4));\n        setGeners('\"' + Movie.geners?.join('\", \"') + '\"');\n        setImageUrl(Movie?.image);\n        setCheckIfWatched(await checkIfSomeoneWatched(Movie?._id))\n    }, [Movie])\n\n    return (\n        <div>\n            <h3>{movie.name}, {Year}</h3>\n            Geners: {geners}<br /><br />\n            <img src={img} alt={movie.name} /><br />\n            {checkIfWatched ? <SubWatchedMovieComp movieId={movie._id} /> : null}\n            <button onClick={editMovie}>Edit</button>\n            <button onClick={deleteMovie}>Delete</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}