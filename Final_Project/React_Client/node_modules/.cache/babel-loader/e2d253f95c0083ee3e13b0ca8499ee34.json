{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/LoginPageComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { checkIfUserExist, findUserID } from '../Utils/Users_Utils';\nimport { getUserByID } from '../DALs/Users_DAL';\nimport '../Style/style.css'; //Login Page (Form with login for users)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate(); // for transiton to another page\n\n  const dispatch = useDispatch(); //Checking of login of inputs:\n\n  const checkAndSend = async () => {\n    const user = {\n      username: username,\n      password: password ? password : '' //if password exist password=password, if not password=\"\".\n\n    };\n    const isExist = await checkIfUserExist(user);\n    console.log(isExist);\n\n    if (isExist) {\n      if (user.password === '') {\n        alert('An account have not been created yet');\n      } else {\n        const id = await findUserID(username); //id of user by user name (findUserID--->from Utils)\n\n        const user = await getUserByID(id); // getUserByID ( from DAL)\n\n        dispatch({\n          type: \"Save User\",\n          payload: user\n        }); //Saving the user's data in redux\n\n        dispatch({\n          type: \"Save Permissions\",\n          payload: user.permissions.permissions\n        }); //saving the permission data in redux\n\n        navigate('/mainPage'); //navigating to mainpage\n      }\n    } else alert('The Username Or Password Is Incorrect');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainLoginDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loginH1\",\n      children: \"Movies -Subscriptions Web Site\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginSmallDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"loginH2\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 103\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 108\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeonChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 85\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAndSend,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 67\n      }, this), \"New User? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: 'CreateAccount',\n        children: \"Create New Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"8zrmt2ay5Csu85vjQEEJmieJW8I=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/LoginPageComponent.js"],"names":["React","useState","useNavigate","Link","useDispatch","checkIfUserExist","findUserID","getUserByID","LoginPage","username","setUserName","password","setPassword","navigate","dispatch","checkAndSend","user","isExist","console","log","alert","id","type","payload","permissions","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport  { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux';\nimport { checkIfUserExist,findUserID } from '../Utils/Users_Utils';\nimport { getUserByID } from '../DALs/Users_DAL';\nimport '../Style/style.css'\n\n//Login Page (Form with login for users)\n\nexport default function LoginPage() {\n\n    const [username,setUserName] = useState();\n    const [password,setPassword] = useState();\n\n    const navigate = useNavigate(); // for transiton to another page\n    const dispatch = useDispatch();\n\n    //Checking of login of inputs:\n    const checkAndSend = async () => {\n        const user = {\n            username: username,\n            password: password ? password : ''//if password exist password=password, if not password=\"\".\n        }\n        const isExist = await checkIfUserExist(user)\n        console.log(isExist)\n        if (isExist)\n        {\n            if (user.password === '')\n            {\n                alert('An account have not been created yet')\n            }\n            else\n            {\n                const id = await findUserID(username)//id of user by user name (findUserID--->from Utils)\n                const user = await getUserByID(id)// getUserByID ( from DAL)\n                dispatch({ type: \"Save User\", payload: user })//Saving the user's data in redux\n                dispatch({ type: \"Save Permissions\", payload: user.permissions.permissions })//saving the permission data in redux\n                navigate('/mainPage')//navigating to mainpage\n            }\n        } else\n            alert('The Username Or Password Is Incorrect')\n    }\n\n    return (\n        <div className='mainLoginDiv'>\n            <h1 className='loginH1'>Movies -Subscriptions Web Site</h1>\n            <div className='loginSmallDiv'>\n            <h2 className='loginH2'>Login</h2>\n                 <input type=\"text\" placeholder='Username' onChange={e=>setUserName(e.target.value)}/><br/><br/>\n                 <input type=\"text\" placeonChange={e=>setPassword(e.target.value)}/><br/>\n                    <button  onClick={checkAndSend}>Login</button><br/>\n                    New User? <Link to={'CreateAccount'}>Create New Account</Link>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}