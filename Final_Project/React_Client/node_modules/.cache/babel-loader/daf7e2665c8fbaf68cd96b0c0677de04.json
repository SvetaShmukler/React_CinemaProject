{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Client/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router'; //1 page:\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const navigate = useNavigate(); // for transiton to another page\n\n  const [user, setUser] = useState({\n    userName: '',\n    userPassword: ''\n  }); // Determine stste--->user object(isValid for first name mangetory, in state its false , because state of first name is empty)\n  //goNext - function for button(if fname is empty--->alert masage, else going to city page)\n\n  const goNext = e => {\n    e.preventDefault();\n\n    if (user.isValid) //isValid==true\n      {\n        navigate(`/city/${user.fname}/${user.lname}`); //  /city-to next page and(user.fname,user.lname-params)\n      } else {\n      alert('First name is mandatory');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log in P\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: goNext,\n      children: [\"First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fname\",\n        onChange: e => setUser({ ...user,\n          fname: e.target.value,\n          isValid: e.target.value ? true : false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 154\n      }, this), \"Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lname\",\n        onChange: e => setUser({ ...user,\n          lname: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 119\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"nTITgHXvo8Zx4rV3WNv4jrpReKE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Client/LoginPage.js"],"names":["React","useState","useNavigate","LoginPage","navigate","user","setUser","userName","userPassword","goNext","e","preventDefault","isValid","fname","lname","alert","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,QAAV,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B,C,CAEA;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAMC,QAAQ,GAAGF,WAAW,EAA5B,CAFgC,CAED;;AAG/B,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAACM,IAAAA,QAAQ,EAAC,EAAV;AAAaC,IAAAA,YAAY,EAAC;AAA1B,GAAD,CAAhC,CALgC,CAMhC;AAEA;;AACA,QAAMC,MAAM,GAAIC,CAAD,IACf;AACIA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,IAAI,CAACO,OAAT,EAAiB;AACjB;AACIR,QAAAA,QAAQ,CAAE,SAAQC,IAAI,CAACQ,KAAM,IAAGR,IAAI,CAACS,KAAM,EAAnC,CAAR,CADJ,CACiD;AAChD,OAHD,MAKA;AACIC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEN,MAAhB;AAAA,8CACoB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,EAAEC,CAAC,IAAEJ,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAASQ,UAAAA,KAAK,EAACH,CAAC,CAACM,MAAF,CAASC,KAAxB;AAA8BL,UAAAA,OAAO,EAACF,CAAC,CAACM,MAAF,CAASC,KAAT,GAAe,IAAf,GAAoB;AAA1D,SAAD;AAApD;AAAA;AAAA;AAAA;AAAA,cADpB,eAC6I;AAAA;AAAA;AAAA;AAAA,cAD7I,8BAEmB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,EAAEP,CAAC,IAAEJ,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAASS,UAAAA,KAAK,EAACJ,CAAC,CAACM,MAAF,CAASC;AAAxB,SAAD;AAApD;AAAA;AAAA;AAAA;AAAA,cAFnB,eAE0G;AAAA;AAAA;AAAA;AAAA,cAF1G,eAGQ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAhCuBd,S;UAEHD,W;;;KAFGC,S","sourcesContent":["import React from 'react'\nimport  { useState } from 'react'\nimport { useNavigate } from 'react-router';\n\n//1 page:\n\nexport default function LoginPage() {\n\n    const navigate = useNavigate();// for transiton to another page\n\n\n    const [user, setUser] = useState({userName:'',userPassword:''})\n    // Determine stste--->user object(isValid for first name mangetory, in state its false , because state of first name is empty)\n\n    //goNext - function for button(if fname is empty--->alert masage, else going to city page)\n    const goNext = (e) =>\n    {\n        e.preventDefault();\n        if (user.isValid)//isValid==true\n        {\n            navigate(`/city/${user.fname}/${user.lname}`)//  /city-to next page and(user.fname,user.lname-params)\n        }\n        else\n        {\n            alert('First name is mandatory')\n        }  \n    }\n\n    return (\n        <div className='loginStyle'>\n            <h2>Log in P</h2>\n            <form onSubmit={goNext}>\n                    First Name: <input type=\"text\" name=\"fname\" onChange={e=>setUser({...user,fname:e.target.value,isValid:e.target.value?true:false})}/><br/>\n                    Last Name: <input type=\"text\" name=\"lname\" onChange={e=>setUser({...user,lname:e.target.value})}/><br/>\n                    <button type=\"submit\">Next</button>\n                </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}