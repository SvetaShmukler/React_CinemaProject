{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/EditMovieComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getMovieByID, updateMovieById } from '../DALs/MoviesDAL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditMovieComp() {\n  _s();\n\n  //all states:\n  const [movie, setMovie] = useState();\n  const [name, setName] = useState();\n  const [genres, setGenres] = useState();\n  const [img, setImg] = useState();\n  const [premiered, setPremiered] = useState();\n  const state = useSelector(state => state);\n  const navigate = useNavigate(); //Loading data to inputs:\n\n  useEffect(async () => {\n    const inputMovie = await getMovieByID(state.editMovie); //getMovieByID - from dal movies, state.editMovie - from reducer.\n\n    let date = new Date(inputMovie.premiered);\n    date = date.getFullYear() + \"-\" + (date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1) + \"-\" + date.getDate();\n    setPremiered(date);\n    setMovie(inputMovie);\n  }, []); // Updating the movie with new inputs in DB:\n\n  const updateMovie = async () => {\n    console.log(premiered);\n    const genresArr = genres === null || genres === void 0 ? void 0 : genres.split(\",\");\n    const movieObj = { ...movie,\n      name: name,\n      geners: genres ? genresArr : movie.geners,\n      image: img,\n      premiered: premiered\n    };\n    await updateMovieById(movieObj, movie._id);\n    navigate('/mainPage/movies/allMovies'); //navigating to allMovies page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"\",\n      children: [\"Edit Movie:  \", movie === null || movie === void 0 ? void 0 : movie.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: movie === null || movie === void 0 ? void 0 : movie.name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 128\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Genres: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: movie === null || movie === void 0 ? void 0 : movie.genres.toString(),\n        onChange: e => setGenres(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 145\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Image URL: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: movie === null || movie === void 0 ? void 0 : movie.image,\n        onChange: e => setImg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 133\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Premiered: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        defaultValue: premiered,\n        onChange: e => setPremiered(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 136\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 142\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateMovie,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/mainPage/movies/allMovies'),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditMovieComp, \"UWHyVhu0TYR7bvYzDlRkSOtkLu8=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = EditMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovieComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/EditMovieComponent.js"],"names":["React","useEffect","useState","useSelector","useNavigate","getMovieByID","updateMovieById","EditMovieComp","movie","setMovie","name","setName","genres","setGenres","img","setImg","premiered","setPremiered","state","navigate","inputMovie","editMovie","date","Date","getFullYear","getMonth","getDate","updateMovie","console","log","genresArr","split","movieObj","geners","image","_id","e","target","value","toString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { getMovieByID, updateMovieById } from '../DALs/MoviesDAL'\n\nexport default function EditMovieComp(){\n    //all states:\n    const [movie, setMovie] = useState()\n    const [name, setName] = useState()\n    const [genres, setGenres] = useState()\n    const [img, setImg] = useState()\n    const [premiered, setPremiered] = useState()\n    const state = useSelector(state => state)\n\n    const navigate = useNavigate()\n\n    //Loading data to inputs:\n    useEffect(async () => {\n        const inputMovie = await getMovieByID(state.editMovie)//getMovieByID - from dal movies, state.editMovie - from reducer.\n        let date = new Date(inputMovie.premiered)\n        date = date.getFullYear() + \"-\" + ((date.getMonth() + 1) < 10 ? \"0\" + (date.getMonth() + 1) : (date.getMonth() + 1)) + \"-\" + date.getDate()\n        setPremiered(date);\n        setMovie(inputMovie);\n    }, [])\n\n    // Updating the movie with new inputs in DB:\n    const updateMovie = async () => {\n        console.log(premiered)\n        const genresArr = genres?.split(\",\")\n        const movieObj = { ...movie, name: name, geners: genres?genresArr:movie.geners, image: img, premiered: premiered }\n        await updateMovieById(movieObj, movie._id)\n        navigate('/mainPage/movies/allMovies') //navigating to allMovies page\n    }\n    return (\n        <div >\n            <h2>Movies</h2>\n            <h3 className=''>Edit Movie:  {movie?.name}</h3>\n            <div className=''>\n                <strong>Name: </strong><input type='text' defaultValue={movie?.name} onChange={e => setName(e.target.value)} /><br />\n                <strong>Genres: </strong><input type='text' defaultValue={movie?.genres.toString()} onChange={e => setGenres(e.target.value)} /><br />\n                <strong>Image URL: </strong><input type='text' defaultValue={movie?.image} onChange={e => setImg(e.target.value)} /><br />\n                <strong>Premiered: </strong><input type='date' defaultValue={premiered} onChange={e => setPremiered(e.target.value)} /><br /><br />\n                <button  onClick={updateMovie}>Update</button>\n                <button  onClick={() => navigate('/mainPage/movies/allMovies')}>Cancel</button>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}