{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/EachMovieComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport MoviesComp from './MoviesComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EachMovieComp(props) {\n  _s();\n\n  const [movie, setMovie] = useState({}); //{}---> object, because movie is an object\n\n  const [year, setYear] = useState(0); // number\n\n  const [genres, setGenres] = useState();\n  const [imgMovie, setImgMovie] = useState();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const permissions = useSelector(state => state.permissions); //Loading all of the each movies components to the page:\n\n  useEffect(async () => {\n    setMovie(props.movie); //its all obj:{name,genres,premiered}\n\n    setYear(props.movie.premiered.slice(0, 4)); //its date formate and look like this:\"premiered\" : ISODate(\"2013-06-24T00:00:00.000Z\")\n\n    setGenres('\"' + props.movie.genres.join('\",\"') + '\"');\n    setImgMovie(props.movie.image);\n  }, [props.movie]); //cheching if user has a permission \"update movie\"\n\n  const editMovie = () => {\n    let boolean = false;\n\n    for (let permission of permissions) //cheking\n    {\n      if (permission === \"Update Movie\") {\n        boolean = true; //if he has\n      }\n    }\n\n    if (boolean) {\n      dispatch({\n        type: \"Save movie for edit movie\",\n        payload\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [movie.name, \",\", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"genres: \", genres]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgMovie,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editMovie,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EachMovieComp, \"4q8yJxt2ptxX7eIcSAMpGSdQYAc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = EachMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachMovieComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/EachMovieComponent.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","MoviesComp","EachMovieComp","props","movie","setMovie","year","setYear","genres","setGenres","imgMovie","setImgMovie","navigate","dispatch","permissions","state","premiered","slice","join","image","editMovie","boolean","permission","type","payload","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC,CADyC,CACJ;;AACrC,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAiBV,QAAQ,CAAC,CAAD,CAA/B,CAFyC,CAEP;;AAClC,QAAM,CAACW,MAAD,EAAQC,SAAR,IAAqBZ,QAAQ,EAAnC;AACA,QAAM,CAACa,QAAD,EAAUC,WAAV,IAAyBd,QAAQ,EAAvC;AAEA,QAAMe,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,WAAW,GAAGf,WAAW,CAACgB,KAAK,IAAGA,KAAK,CAACD,WAAf,CAA/B,CARyC,CAUzC;;AACAlB,EAAAA,SAAS,CAAC,YACV;AACIS,IAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR,CADJ,CACyB;;AACrBG,IAAAA,OAAO,CAACJ,KAAK,CAACC,KAAN,CAAYY,SAAZ,CAAsBC,KAAtB,CAA4B,CAA5B,EAA8B,CAA9B,CAAD,CAAP,CAFJ,CAE6C;;AACzCR,IAAAA,SAAS,CAAC,MAAMN,KAAK,CAACC,KAAN,CAAYI,MAAZ,CAAmBU,IAAnB,CAAwB,KAAxB,CAAN,GAAqC,GAAtC,CAAT;AACAP,IAAAA,WAAW,CAACR,KAAK,CAACC,KAAN,CAAYe,KAAb,CAAX;AACH,GANQ,EAMP,CAAChB,KAAK,CAACC,KAAP,CANO,CAAT,CAXyC,CAmBzC;;AACA,QAAMgB,SAAS,GAAG,MAClB;AACI,QAAIC,OAAO,GAAG,KAAd;;AACA,SAAK,IAAIC,UAAT,IAAuBR,WAAvB,EAAmC;AACnC;AACI,UAAGQ,UAAU,KAAK,cAAlB,EACA;AACID,QAAAA,OAAO,GAAG,IAAV,CADJ,CACkB;AACjB;AACJ;;AACD,QAAIA,OAAJ,EACA;AACIR,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAE,2BAAP;AAAoCC,QAAAA;AAApC,OAAD,CAAR;AAEH;AACJ,GAfD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,iBAAKpB,KAAK,CAACqB,IAAX,OAAkBnB,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BAAaE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,GAAG,EAAEE,QAAV;AAAoB,MAAA,GAAG,EAAEN,KAAK,CAACqB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GApDuBlB,a;UAMHF,W,EACAF,W,EACGC,W;;;KARAG,a","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport MoviesComp from './MoviesComponent'\n\nexport default function EachMovieComp(props) {\n    const [movie,setMovie] = useState({})//{}---> object, because movie is an object\n    const [year,setYear] = useState(0)// number\n    const [genres,setGenres] = useState()\n    const [imgMovie,setImgMovie] = useState()\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const permissions = useSelector(state =>state.permissions)\n\n    //Loading all of the each movies components to the page:\n    useEffect(async () =>\n    {\n        setMovie(props.movie)//its all obj:{name,genres,premiered}\n        setYear(props.movie.premiered.slice(0,4))//its date formate and look like this:\"premiered\" : ISODate(\"2013-06-24T00:00:00.000Z\")\n        setGenres('\"' + props.movie.genres.join('\",\"')+'\"')\n        setImgMovie(props.movie.image)\n    },[props.movie])\n\n    //cheching if user has a permission \"update movie\"\n    const editMovie = () =>\n    {\n        let boolean = false\n        for (let permission of permissions)//cheking\n        {\n            if(permission === \"Update Movie\")\n            {\n                boolean = true//if he has\n            }\n        }\n        if (boolean)\n        {\n            dispatch({type: \"Save movie for edit movie\", payload})\n            \n        }\n    }\n\n\n\n\n\n\n\n    return(\n        <div className='movieDiv'>\n            <h4>{movie.name},{year}</h4>\n            <h6>genres: {genres}</h6>\n            <img src={imgMovie} alt={movie.name}/>\n            <button onClick={editMovie}>Edit</button>\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}