{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneEditUserComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Navigate, useNavigate } from \"react-router\";\nimport { updateUserById } from \"../DALs/Users_DAL\";\nimport { getPermissions, getPermissionsArray, moviesPermissionsPressed, subscriptionsPermissionsPressed } from \"../Utils/Users_Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OneEditUser(props) {\n  _s();\n\n  //states:\n  const [user, setUser] = useState();\n  const [userJson, setUserJSON] = useState({});\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [sessionTimeOut, setSessionTimeOut] = useState(0);\n  const [permissions, setPermissions] = useState({});\n  const [permissionsBooleanList, setPermissionsBooleanList] = useState([false, false, false, false, false, false, false, false]);\n  const [permissionsStringsList] = useState([\"View Subscriptions\", \"Create Subscriptions\", \"Delete Subscriptions\", \"Update Subscriptions\", \"View Movies\", \"Create Movies\", \"Delete Movies\", \"Update Movie\"]);\n  const [PermissionsBOOL, setPermissionsBOOL] = useState([]);\n  const [refresh, setRefresh] = useState();\n  const navigate = useNavigate(); //Loading all data in the inputs:\n\n  useEffect(() => {\n    const editUser = props.user;\n    setUser(editUser.user);\n    setUserJSON(editUser.userJson);\n    setPermissions(editUser.permissions.permissions);\n    const userArr = getPermissionsArray(editUser.permissions.permissions);\n    setPermissionsBooleanList(userArr);\n    setPermissionsBOOL(userArr);\n  }, []); //Checking constantly the permission to \"check\" the \"view\" permissoin accordingly\n\n  useEffect(() => {\n    const arr = [...PermissionsBOOL];\n\n    if (subscriptionsPermissionsPressed(PermissionsBOOL)) {\n      //\"view permissions\"\n      arr[0] = true;\n      setPermissionsBOOL(arr);\n      setPermissionsBooleanList(arr);\n    }\n\n    if (moviesPermissionsPressed(PermissionsBOOL)) {\n      arr[4] = true;\n      setPermissionsBOOL(arr);\n      setPermissionsBooleanList(arr);\n    }\n  }, [refresh]); //Saving the client's inputs of permissions: \n\n  const changePermission = e => {\n    const arr = [...permissionsBooleanList];\n    e.target.checked ? arr[e.target.name] = true : arr[e.target.name] = false;\n    setPermissionsBooleanList(arr);\n    setPermissionsBOOL(arr);\n    setRefresh(!refresh);\n  }; //Geting all the client inputs and updating users data in the DB:\n\n\n  const updatePermissions = async () => {\n    const newArr = getPermissions(permissionsBooleanList); //array of permissions\n\n    const newObj = {\n      //bielding object after updating\n      user: {\n        username: username ? username : user.username,\n        password: user.password\n      },\n      userJson: {\n        firstName: firstName ? firstName : userJson.firstName,\n        lastName: lastName ? lastName : userJson.lastName,\n        createdDate: userJson.createdDate,\n        sessionTimeOut: sessionTimeOut ? sessionTimeOut : userJson.sessionTimeOut\n      },\n      permissions: {\n        id: permissions.id,\n        permissions: newArr ? newArr : permissions.permissions\n      }\n    };\n    await updateUserById(newObj, user._id); // from Dal ---> update in DB\n\n    navigate('/mainPage/usersManagment/allUsers'); // navigate back to all user   \n  }; //Permissions Checkboxes list:\n\n\n  let permissionsList = '';\n\n  if (PermissionsBOOL[0] !== undefined) {\n    permissionsList = permissionsStringsList.map((per, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: index,\n        onChange: changePermission,\n        checked: PermissionsBOOL[index] ? true : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 86\n      }, this), per, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 207\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 68\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"oneEditUserDiv\",\n    children: [\"First Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: userJson.firstName,\n      onChange: e => setFirstName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 124\n    }, this), \"Last Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: userJson.lastName,\n      onChange: e => setLastName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 121\n    }, this), \"Username : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: user === null || user === void 0 ? void 0 : user.username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 117\n    }, this), \"Session time out (Minutes) : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      defaultValue: userJson.sessionTimeOut,\n      onChange: e => setSessionTimeOut(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 151\n    }, this), \"Created data : \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: userJson.createdDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 65\n    }, this), \"Permissions:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this), permissionsList, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"editUserB\",\n      onClick: () => updatePermissions,\n      children: \"Update \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/mainPage/usersManagment/allUsers'),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OneEditUser, \"QoPWLO4xLQlsx/FaUUNAiKFnVsg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OneEditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneEditUser\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneEditUserComponent.js"],"names":["React","useState","useEffect","Navigate","useNavigate","updateUserById","getPermissions","getPermissionsArray","moviesPermissionsPressed","subscriptionsPermissionsPressed","OneEditUser","props","user","setUser","userJson","setUserJSON","firstName","setFirstName","lastName","setLastName","username","setUsername","sessionTimeOut","setSessionTimeOut","permissions","setPermissions","permissionsBooleanList","setPermissionsBooleanList","permissionsStringsList","PermissionsBOOL","setPermissionsBOOL","refresh","setRefresh","navigate","editUser","userArr","arr","changePermission","e","target","checked","name","updatePermissions","newArr","newObj","password","createdDate","id","_id","permissionsList","undefined","map","per","index","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,cAAT,EAAyBC,mBAAzB,EAA8CC,wBAA9C,EAAwEC,+BAAxE,QAA+G,sBAA/G;;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EACf;AAAA;;AACI;AACA,QAAM,CAAEC,IAAF,EAAOC,OAAP,IAAmBZ,QAAQ,EAAjC;AACA,QAAM,CAAEa,QAAF,EAAWC,WAAX,IAA2Bd,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAEe,SAAF,EAAYC,YAAZ,IAA6BhB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAEiB,QAAF,EAAWC,WAAX,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEmB,QAAF,EAAWC,WAAX,IAA2BpB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAEqB,cAAF,EAAiBC,iBAAjB,IAAuCtB,QAAQ,CAAC,CAAD,CAArD;AACA,QAAM,CAAEuB,WAAF,EAAcC,cAAd,IAAiCxB,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAAEyB,sBAAF,EAAyBC,yBAAzB,IAAuD1B,QAAQ,CAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,CAAD,CAArE;AACA,QAAM,CAAE2B,sBAAF,IAA4B3B,QAAQ,CAAC,CAAC,oBAAD,EAAsB,sBAAtB,EAA6C,sBAA7C,EAAoE,sBAApE,EAA2F,aAA3F,EAAyG,eAAzG,EAAyH,eAAzH,EAAyI,cAAzI,CAAD,CAA1C;AACA,QAAM,CAAC4B,eAAD,EAAkBC,kBAAlB,IAAwC7B,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAE8B,OAAF,EAAWC,UAAX,IAAyB/B,QAAQ,EAAvC;AAEA,QAAMgC,QAAQ,GAAG7B,WAAW,EAA5B,CAdJ,CAgBG;;AACCF,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMgC,QAAQ,GAAGvB,KAAK,CAACC,IAAvB;AACAC,IAAAA,OAAO,CAACqB,QAAQ,CAACtB,IAAV,CAAP;AACAG,IAAAA,WAAW,CAACmB,QAAQ,CAACpB,QAAV,CAAX;AACAW,IAAAA,cAAc,CAACS,QAAQ,CAACV,WAAT,CAAqBA,WAAtB,CAAd;AACA,UAAMW,OAAO,GAAG5B,mBAAmB,CAAC2B,QAAQ,CAACV,WAAT,CAAqBA,WAAtB,CAAnC;AACAG,IAAAA,yBAAyB,CAACQ,OAAD,CAAzB;AACAL,IAAAA,kBAAkB,CAACK,OAAD,CAAlB;AACH,GARQ,EAQP,EARO,CAAT,CAjBJ,CA2BI;;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkC,GAAG,GAAG,CAAC,GAAGP,eAAJ,CAAZ;;AACA,QAAIpB,+BAA+B,CAACoB,eAAD,CAAnC,EAAsD;AAAC;AACnDO,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAT;AACAN,MAAAA,kBAAkB,CAACM,GAAD,CAAlB;AACAT,MAAAA,yBAAyB,CAACS,GAAD,CAAzB;AACH;;AACD,QAAI5B,wBAAwB,CAACqB,eAAD,CAA5B,EAA+C;AAC3CO,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAT;AACAN,MAAAA,kBAAkB,CAACM,GAAD,CAAlB;AACAT,MAAAA,yBAAyB,CAACS,GAAD,CAAzB;AACH;AACJ,GAZQ,EAYN,CAACL,OAAD,CAZM,CAAT,CA5BJ,CA0CI;;AACA,QAAMM,gBAAgB,GAAIC,CAAD,IAAO;AAC5B,UAAMF,GAAG,GAAG,CAAC,GAAGV,sBAAJ,CAAZ;AACAY,IAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmBJ,GAAG,CAACE,CAAC,CAACC,MAAF,CAASE,IAAV,CAAH,GAAqB,IAAxC,GAA+CL,GAAG,CAACE,CAAC,CAACC,MAAF,CAASE,IAAV,CAAH,GAAqB,KAApE;AACAd,IAAAA,yBAAyB,CAACS,GAAD,CAAzB;AACAN,IAAAA,kBAAkB,CAACM,GAAD,CAAlB;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAND,CA3CJ,CAmDI;;;AACA,QAAMW,iBAAiB,GAAG,YAAY;AAClC,UAAMC,MAAM,GAAGrC,cAAc,CAACoB,sBAAD,CAA7B,CADkC,CACmB;;AACrD,UAAMkB,MAAM,GAAG;AAAC;AACZhC,MAAAA,IAAI,EAAC;AACDQ,QAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAcR,IAAI,CAACQ,QADpC;AAEDyB,QAAAA,QAAQ,EAAEjC,IAAI,CAACiC;AAFd,OADM;AAKX/B,MAAAA,QAAQ,EAAC;AACLE,QAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAH,GAAeF,QAAQ,CAACE,SADvC;AAELE,QAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAcJ,QAAQ,CAACI,QAFpC;AAGL4B,QAAAA,WAAW,EAAEhC,QAAQ,CAACgC,WAHjB;AAILxB,QAAAA,cAAc,EAAEA,cAAc,GAAGA,cAAH,GAAoBR,QAAQ,CAACQ;AAJtD,OALE;AAWXE,MAAAA,WAAW,EAAC;AACRuB,QAAAA,EAAE,EAAEvB,WAAW,CAACuB,EADR;AAERvB,QAAAA,WAAW,EAAGmB,MAAM,GAAGA,MAAH,GAAWnB,WAAW,CAACA;AAFnC;AAXD,KAAf;AAgBA,UAAMnB,cAAc,CAACuC,MAAD,EAAShC,IAAI,CAACoC,GAAd,CAApB,CAlBkC,CAkBI;;AACtCf,IAAAA,QAAQ,CAAE,mCAAF,CAAR,CAnBkC,CAmBY;AACjD,GApBD,CApDJ,CAyEI;;;AACA,MAAIgB,eAAe,GAAG,EAAtB;;AACA,MAAIpB,eAAe,CAAC,CAAD,CAAf,KAAuBqB,SAA3B,EACA;AACID,IAAAA,eAAe,GAAGrB,sBAAsB,CAACuB,GAAvB,CAA2B,CAACC,GAAD,EAAKC,KAAL,kBAAc;AAAA,8BAAkB;AAAO,QAAA,IAAI,EAAG,UAAd;AAAyB,QAAA,IAAI,EAAGA,KAAhC;AAAuC,QAAA,QAAQ,EAAEhB,gBAAjD;AAAmE,QAAA,OAAO,EAAIR,eAAe,CAACwB,KAAD,CAAf,GAAyB,IAAzB,GAA8B;AAA5G;AAAA;AAAA;AAAA;AAAA,cAAlB,EAAuID,GAAvI,eAA2I;AAAA;AAAA;AAAA;AAAA,cAA3I;AAAA,OAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,YAAzC,CAAlB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,6CACiB;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,YAAY,EAAEvC,QAAQ,CAACE,SAA3C;AAAsD,MAAA,QAAQ,EAAEsB,CAAC,IAAErB,YAAY,CAACqB,CAAC,CAACC,MAAF,CAASe,KAAV;AAA/E;AAAA;AAAA;AAAA;AAAA,YADjB,eACmH;AAAA;AAAA;AAAA;AAAA,YADnH,+BAEgB;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,YAAY,EAAExC,QAAQ,CAACI,QAA3C;AAAqD,MAAA,QAAQ,EAAEoB,CAAC,IAAEnB,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASe,KAAV;AAA7E;AAAA;AAAA;AAAA;AAAA,YAFhB,eAEgH;AAAA;AAAA;AAAA;AAAA,YAFhH,8BAGe;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,YAAY,EAAE1C,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,QAAxC;AAAkD,MAAA,QAAQ,EAAEkB,CAAC,IAAEjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASe,KAAV;AAA1E;AAAA;AAAA;AAAA;AAAA,YAHf,eAG4G;AAAA;AAAA;AAAA;AAAA,YAH5G,gDAIiC;AAAO,MAAA,IAAI,EAAE,QAAb;AAAqB,MAAA,YAAY,EAAExC,QAAQ,CAACQ,cAA5C;AAA4D,MAAA,QAAQ,EAAEgB,CAAC,IAAEf,iBAAiB,CAACe,CAAC,CAACC,MAAF,CAASe,KAAV;AAA1F;AAAA;AAAA;AAAA;AAAA,YAJjC,eAI8I;AAAA;AAAA;AAAA;AAAA,YAJ9I,kCAKmB;AAAO,MAAA,KAAK,EAAExC,QAAQ,CAACgC;AAAvB;AAAA;AAAA;AAAA;AAAA,YALnB,eAKwD;AAAA;AAAA;AAAA;AAAA,YALxD,+BAMgB;AAAA;AAAA;AAAA;AAAA,YANhB,EAOKG,eAPL,eAQI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAI,MAAMP,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAQ,MAAA,OAAO,EAAE,MAAMT,QAAQ,CAAC,mCAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA9FuBvB,W;UAeHN,W;;;KAfGM,W","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport { Navigate, useNavigate } from \"react-router\"\nimport { updateUserById } from \"../DALs/Users_DAL\"\nimport { getPermissions, getPermissionsArray, moviesPermissionsPressed, subscriptionsPermissionsPressed } from \"../Utils/Users_Utils\"\nexport default function OneEditUser(props)\n{\n    //states:\n    const [ user,setUser ] = useState()\n    const [ userJson,setUserJSON ] = useState({})\n    const [ firstName,setFirstName ] = useState('')\n    const [ lastName,setLastName ]  = useState('')\n    const [ username,setUsername ] = useState('')\n    const [ sessionTimeOut,setSessionTimeOut ] = useState(0)\n    const [ permissions,setPermissions ] = useState({})\n    const [ permissionsBooleanList,setPermissionsBooleanList ] = useState([false,false,false,false,false,false,false,false])\n    const [ permissionsStringsList] = useState([\"View Subscriptions\",\"Create Subscriptions\",\"Delete Subscriptions\",\"Update Subscriptions\",\"View Movies\",\"Create Movies\",\"Delete Movies\",\"Update Movie\"])\n    const [PermissionsBOOL, setPermissionsBOOL] = useState([])\n    const [ refresh, setRefresh] = useState()\n    \n    const navigate = useNavigate()\n   \n   //Loading all data in the inputs:\n    useEffect(()=> {\n        const editUser = props.user;\n        setUser(editUser.user);\n        setUserJSON(editUser.userJson);\n        setPermissions(editUser.permissions.permissions);\n        const userArr = getPermissionsArray(editUser.permissions.permissions)\n        setPermissionsBooleanList(userArr)\n        setPermissionsBOOL(userArr)\n    },[])\n\n    //Checking constantly the permission to \"check\" the \"view\" permissoin accordingly\n    useEffect(() => {\n        const arr = [...PermissionsBOOL]\n        if (subscriptionsPermissionsPressed(PermissionsBOOL)) {//\"view permissions\"\n            arr[0] = true\n            setPermissionsBOOL(arr)\n            setPermissionsBooleanList(arr)\n        }\n        if (moviesPermissionsPressed(PermissionsBOOL)) {\n            arr[4] = true\n            setPermissionsBOOL(arr)\n            setPermissionsBooleanList(arr)\n        }\n    }, [refresh])\n\n    //Saving the client's inputs of permissions: \n    const changePermission = (e) => {\n        const arr = [...permissionsBooleanList]\n        e.target.checked ? arr[e.target.name] = true : arr[e.target.name] = false\n        setPermissionsBooleanList(arr)\n        setPermissionsBOOL(arr)\n        setRefresh(!refresh)\n    }\n\n    //Geting all the client inputs and updating users data in the DB:\n    const updatePermissions = async () => {\n        const newArr = getPermissions(permissionsBooleanList)//array of permissions\n        const newObj = {//bielding object after updating\n            user:{\n                username: username ? username : user.username,\n                password: user.password,\n            },\n            userJson:{\n                firstName: firstName ? firstName : userJson.firstName,\n                lastName: lastName ? lastName : userJson.lastName,\n                createdDate: userJson.createdDate,\n                sessionTimeOut: sessionTimeOut ? sessionTimeOut : userJson.sessionTimeOut,\n            },\n            permissions:{\n                id: permissions.id,\n                permissions : newArr ? newArr :permissions.permissions\n            }\n        }\n        await updateUserById(newObj, user._id)// from Dal ---> update in DB\n        navigate ('/mainPage/usersManagment/allUsers')// navigate back to all user   \n    }\n    //Permissions Checkboxes list:\n    let permissionsList = ''\n    if (PermissionsBOOL[0] !== undefined)\n    {\n        permissionsList = permissionsStringsList.map((per,index) =><span key={index}><input type = 'checkbox' name ={index} onChange={changePermission} checked = {PermissionsBOOL[index] ? true:false}/>{per}<br/></span>)\n    }\n\n    return(\n        <div className=\"oneEditUserDiv\">\n            First Name : <input type ='text' defaultValue={userJson.firstName} onChange={e=>setFirstName(e.target.value)}/><br/>\n            Last Name : <input type ='text' defaultValue={userJson.lastName} onChange={e=>setLastName(e.target.value)}/><br/>\n            Username : <input type ='text' defaultValue={user?.username} onChange={e=>setUsername(e.target.value)}/><br/>\n            Session time out (Minutes) : <input type ='number'defaultValue={userJson.sessionTimeOut} onChange={e=>setSessionTimeOut(e.target.value)}/><br/>\n            Created data : <input value={userJson.createdDate}/><br/>\n            Permissions:<br/>\n            {permissionsList}\n            <button className=\"editUserB\" onClick = {() => updatePermissions} >Update </button>\n            <button onClick={() => navigate('/mainPage/usersManagment/allUsers')}>Cancel</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}