{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSe } from 'react-redux';\nexport default function OneUserComp(props) {\n  _s();\n\n  //States:\n  const [user, setUser] = useState({});\n  const [permissions, setPermissions] = useState();\n  const [userJson, setUserJson] = useState();\n  const [isAdmin, setIsAdmin] = useState();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n}\n\n_s(OneUserComp, \"Anji+b6bAkOfez07dXqIQNaKqKk=\", true, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = OneUserComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneUserComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneUserComponent.js"],"names":["React","useEffect","useState","useNavigate","useDispatch","useSe","OneUserComp","props","user","setUser","permissions","setPermissions","userJson","setUserJson","isAdmin","setIsAdmin","navigate","dispatch","state","useSelector"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,WAAT,EAAqBC,KAArB,QAAkC,aAAlC;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC;AACA,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeP,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAK,CAACQ,WAAD,EAAaC,cAAb,IAA6BT,QAAQ,EAA1C;AACA,QAAK,CAACU,QAAD,EAAUC,WAAV,IAAuBX,QAAQ,EAApC;AACA,QAAK,CAACY,OAAD,EAASC,UAAT,IAAqBb,QAAQ,EAAlC;AAEA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,KAAK,GAAGC,WAAW,CAACD,KAAK,IAAIA,KAAV,CAAzB;AAEH;;GAXuBZ,W;UAOHH,W,EACAC,W;;;KARGE,W","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { useNavigate } from 'react-router'\nimport { useDispatch,useSe } from 'react-redux'\n\nexport default function OneUserComp(props) {\n    //States:\n    const[user,setUser]=useState({})\n    const[permissions,setPermissions]=useState()\n    const[userJson,setUserJson]=useState()\n    const[isAdmin,setIsAdmin]=useState()\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const state = useSelector(state => state)\n\n}"]},"metadata":{},"sourceType":"module"}