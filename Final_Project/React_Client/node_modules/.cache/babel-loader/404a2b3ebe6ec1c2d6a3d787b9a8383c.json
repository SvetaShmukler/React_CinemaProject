{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Main.js\";\nimport React, { Component } from 'react';\nimport { getAllUsers } from '../DALs/DAL_USERS';\nimport Users from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = e => {\n      let searchedText = e.target.value;\n      const string = searchedText; // console.log(\"Search text is: \" +searchedText)\n      // if (searchedText.length===0)\n      // {\n      //     console.log('in if');\n      //     console.log(this.state.users);\n      //      this.setState({filteredUsers:this.state.users})\n      //      console.log(\"test\")\n      // }\n      // else\n      // {\n      //     this.setState({filteredUsers:this.state.users})\n      //     console.log(\"Filtered users --->before filter:\")\n      //     console.log(this.state.filteredUsers)\n      //     const searchedUsers = this.state.users.filter((user)=>user.name.includes(searchedText)||user.email.includes(searchedText))\n      //     console.log(\"filter:\")\n      //     console.log(searchedUsers)\n      //     this.setState({filteredUsers:[...searchedUsers]})\n      //     console.log(\"Filtered users --->after filter:\")\n      //     console.log(this.state.filteredUsers)\n      // }\n    };\n\n    this.state = {\n      users: [],\n      filteredUsers: [],\n      names: [],\n      emails: []\n    };\n  }\n\n  async componentDidMount() {\n    const users = await getAllUsers(usersURL);\n    this.setState({\n      users: users.data\n    });\n    this.setState({\n      filteredUsers: users.data\n    });\n    this.setState({\n      names: users.data.name\n    });\n    this.setState({\n      emails: users.data.email\n    });\n  }\n\n  render() {\n    const repUsers = this.state.filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Users, {\n        user: user,\n        id: user.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 92\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 138\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 75\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        background: 'pink',\n        borderRadius: '12px',\n        padding: '5px',\n        width: '500px',\n        textAlign: 'center',\n        margin: 'auto'\n      },\n      children: [\"Search \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 42\n      }, this), repUsers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/REACT/SPA_EX/src/Components/Project_React1/Client/Main.js"],"names":["React","Component","getAllUsers","Users","usersURL","Main","constructor","handleInputChange","e","searchedText","target","value","string","state","users","filteredUsers","names","emails","componentDidMount","setState","data","name","email","render","repUsers","map","user","index","id","border","background","borderRadius","padding","width","textAlign","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,QAAQ,GAAG,4CAAjB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,GACX;AACI;;AADJ,SAaAC,iBAbA,GAaqBC,CAAD,IAAO;AACvB,UAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACA,YAAMC,MAAM,GAACH,YAAb,CAFuB,CAQvB;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AAEP,KAlDD;;AAEI,SAAKI,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC,EAAP;AAAWC,MAAAA,aAAa,EAAC,EAAzB;AAA6BC,MAAAA,KAAK,EAAC,EAAnC;AAAsCC,MAAAA,MAAM,EAAC;AAA7C,KAAb;AACH;;AACsB,QAAjBC,iBAAiB,GACvB;AACI,UAAMJ,KAAK,GAAG,MAAMZ,WAAW,CAACE,QAAD,CAA/B;AACA,SAAKe,QAAL,CAAc;AAACL,MAAAA,KAAK,EAACA,KAAK,CAACM;AAAb,KAAd;AACA,SAAKD,QAAL,CAAc;AAACJ,MAAAA,aAAa,EAACD,KAAK,CAACM;AAArB,KAAd;AACA,SAAKD,QAAL,CAAc;AAACH,MAAAA,KAAK,EAACF,KAAK,CAACM,IAAN,CAAWC;AAAlB,KAAd;AACA,SAAKF,QAAL,CAAc;AAACF,MAAAA,MAAM,EAACH,KAAK,CAACM,IAAN,CAAWE;AAAnB,KAAd;AACH;;AA0CDC,EAAAA,MAAM,GAAG;AAGD,UAAMC,QAAQ,GAAG,KAAKX,KAAL,CAAWE,aAAX,CAAyBU,GAAzB,CAA6B,CAACC,IAAD,EAAMC,KAAN,kBAAgB;AAAA,8BAAiB,QAAC,KAAD;AAAO,QAAA,IAAI,EAAED,IAAb;AAAgC,QAAA,EAAE,EAAEA,IAAI,CAACE;AAAzC,SAAyBD,KAAzB;AAAA;AAAA;AAAA;AAAA,cAAjB,eAA+D;AAAA;AAAA;AAAA;AAAA,cAA/D;AAAA,OAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,YAA7C,CAAjB;AACA,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE,iBAAV;AAA4BC,QAAAA,UAAU,EAAC,MAAvC;AAA+CC,QAAAA,YAAY,EAAE,MAA7D;AAAqEC,QAAAA,OAAO,EAAE,KAA9E;AAAqFC,QAAAA,KAAK,EAAE,OAA5F;AAAqGC,QAAAA,SAAS,EAAE,QAAhH;AAA0HC,QAAAA,MAAM,EAAC;AAAjI,OAAZ;AAAA,yCAEO;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,QAAQ,EAAE,KAAK5B;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFP,2BAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAGoB;AAAA;AAAA;AAAA;AAAA,cAHpB,eAGyB;AAAA;AAAA;AAAA;AAAA,cAHzB,EAICiB,QAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASP;;AApEwB;;AAsE7B,eAAenB,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { getAllUsers } from '../DALs/DAL_USERS';\r\nimport Users from './Users';\r\n\r\nconst usersURL = 'https://jsonplaceholder.typicode.com/users'\r\n\r\nclass Main extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {users:[], filteredUsers:[], names:[],emails:[]}\r\n    }\r\n    async componentDidMount()\r\n    {\r\n        const users = await getAllUsers(usersURL)\r\n        this.setState({users:users.data})\r\n        this.setState({filteredUsers:users.data})\r\n        this.setState({names:users.data.name})\r\n        this.setState({emails:users.data.email})\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        let searchedText = e.target.value;\r\n        const string=searchedText\r\n\r\n\r\n\r\n\r\n\r\n        // console.log(\"Search text is: \" +searchedText)\r\n            \r\n            // if (searchedText.length===0)\r\n            // {\r\n            //     console.log('in if');\r\n            //     console.log(this.state.users);\r\n            //      this.setState({filteredUsers:this.state.users})\r\n            //      console.log(\"test\")\r\n            // }\r\n            // else\r\n            // {\r\n            //     this.setState({filteredUsers:this.state.users})\r\n                \r\n            //     console.log(\"Filtered users --->before filter:\")\r\n            //     console.log(this.state.filteredUsers)\r\n                \r\n            //     const searchedUsers = this.state.users.filter((user)=>user.name.includes(searchedText)||user.email.includes(searchedText))\r\n                \r\n            //     console.log(\"filter:\")\r\n            //     console.log(searchedUsers)\r\n                \r\n            //     this.setState({filteredUsers:[...searchedUsers]})\r\n               \r\n                \r\n            //     console.log(\"Filtered users --->after filter:\")\r\n            //     console.log(this.state.filteredUsers)\r\n\r\n            // }\r\n            \r\n    }\r\n\r\n\r\n    render() {\r\n       \r\n        \r\n            const repUsers = this.state.filteredUsers.map((user,index) => <div key={index}><Users user={user} key ={index} id={user.id}/><br/></div>)\r\n            return(\r\n                <div style={{ border: '2px solid black',background:'pink', borderRadius: '12px', padding: '5px', width: '500px', textAlign: 'center', margin:'auto'}}>\r\n\r\n                Search <input type=\"text\"  onChange={this.handleInputChange}/>&nbsp;&nbsp;\r\n                <button>Add</button><br/><br/>\r\n                {repUsers} \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}