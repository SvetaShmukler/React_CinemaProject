{"ast":null,"code":"var _jsxFileName = \"/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneMovieComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { checkIfMovieWatched } from '../Utils/Movies_Utils';\nimport MoviesComp from './MoviesComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OneMovieComp(props) {\n  _s();\n\n  const [movie, setMovie] = useState({}); //{}---> object, because movie is an object\n\n  const [year, setYear] = useState(0); // number\n\n  const [genres, setGenres] = useState();\n  const [imgMovie, setImgMovie] = useState();\n  const [checkIfWatched, setCheckIfWatched] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const permissions = useSelector(state => state.permissions); //Loading all of the each movies components to the page:\n\n  useEffect(async () => {\n    setMovie(props.movie); //its all obj:{name,genres,premiered}\n\n    setYear(props.movie.premiered.slice(0, 4)); //its date formate and look like this:\"premiered\" : ISODate(\"2013-06-24T00:00:00.000Z\")\n\n    setGenres('\"' + props.movie.genres.join('\",\"') + '\"');\n    setImgMovie(props.movie.image);\n    setCheckIfWatched(await checkIfMovieWatched(props.movie._id)); //checking if watched? true:false\n  }, [props.movie]); //cheching if user has a permission \"update movie\"\n\n  const editMovie = () => {\n    let boolean = false;\n\n    for (let permission of permissions) //cheking\n    {\n      if (permission === \"Update Movie\") {\n        boolean = true; //if he has\n      }\n    }\n\n    if (boolean) //  if user has permission \"edit movie\":\n      {\n        dispatch({\n          type: \"Save movie for edit movie\",\n          payload: props.movie_id\n        });\n        navigate('mainPage/editMovie'); //navigate to edit movie page\n      } else {\n      alert(\"You Don't Have The Permission To Update Movie\");\n    }\n  }; //Delete movie:\n\n\n  const deleteMovie = async () => {\n    let boolean = false;\n\n    for (let permission of permissions) {\n      if (permission === \"Delete Movie\") {\n        //if user has permission \"Delete Movie\" \n        boolean = true;\n      }\n    }\n\n    if (boolean) {\n      await deleteMovieFromAll(props.movie._id); //delete movie from subscriptions and DB\n\n      dispatch({\n        type: 'Refresh'\n      });\n    } else {\n      alert(\"You dont have the permission to Delete Movie\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [movie.name, \",\", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"genres: \", genres]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgMovie,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editMovie,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteMovie,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OneMovieComp, \"MWS0NrL4Y+UIYaq+YK1qEWoXePc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = OneMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"OneMovieComp\");","map":{"version":3,"sources":["/Users/Sveta/Documents/Full_stack/Final Project/React_Client/src/Components/OneMovieComponent.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","checkIfMovieWatched","MoviesComp","OneMovieComp","props","movie","setMovie","year","setYear","genres","setGenres","imgMovie","setImgMovie","checkIfWatched","setCheckIfWatched","navigate","dispatch","permissions","state","premiered","slice","join","image","_id","editMovie","boolean","permission","type","payload","movie_id","alert","deleteMovie","deleteMovieFromAll","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { checkIfMovieWatched } from '../Utils/Movies_Utils'\nimport MoviesComp from './MoviesComponent'\n\nexport default function OneMovieComp(props) {\n    const [movie,setMovie] = useState({})//{}---> object, because movie is an object\n    const [year,setYear] = useState(0)// number\n    const [genres,setGenres] = useState()\n    const [imgMovie,setImgMovie] = useState()\n    const [checkIfWatched,setCheckIfWatched] = useState(false)\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const permissions = useSelector(state =>state.permissions)\n\n    //Loading all of the each movies components to the page:\n    useEffect(async () =>\n    {\n        setMovie(props.movie)//its all obj:{name,genres,premiered}\n        setYear(props.movie.premiered.slice(0,4))//its date formate and look like this:\"premiered\" : ISODate(\"2013-06-24T00:00:00.000Z\")\n        setGenres('\"' + props.movie.genres.join('\",\"')+'\"')\n        setImgMovie(props.movie.image)\n        setCheckIfWatched(await checkIfMovieWatched(props.movie._id))//checking if watched? true:false\n    },[props.movie])\n\n    //cheching if user has a permission \"update movie\"\n    const editMovie = () =>\n    {\n        let boolean = false\n        for (let permission of permissions)//cheking\n        {\n            if(permission === \"Update Movie\")\n            {\n                boolean = true//if he has\n            }\n        }\n        if (boolean)//  if user has permission \"edit movie\":\n        {\n            dispatch({type: \"Save movie for edit movie\", payload: props.movie_id})\n            navigate('mainPage/editMovie')//navigate to edit movie page\n        }\n        else\n        {\n            alert (\"You Don't Have The Permission To Update Movie\")\n        }\n    }\n\n    //Delete movie:\n    const deleteMovie = async()=>\n    {\n        let boolean = false\n        for(let permission of permissions){\n            if (permission ===\"Delete Movie\"){//if user has permission \"Delete Movie\" \n                boolean = true\n            }\n        }\n        if (boolean){\n            await deleteMovieFromAll(props.movie._id)//delete movie from subscriptions and DB\n            dispatch({ type: 'Refresh' })\n        }\n        else{\n            alert(\"You dont have the permission to Delete Movie\")\n        }\n    }\n\n\n    return(\n        <div className='movieDiv'>\n            <h4>{movie.name},{year}</h4>\n            <h6>genres: {genres}</h6>\n            <img src={imgMovie} alt={movie.name}/>\n            <button onClick={editMovie}>Edit</button>\n            <button onClick={deleteMovie}>Delete</button>\n            \n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}